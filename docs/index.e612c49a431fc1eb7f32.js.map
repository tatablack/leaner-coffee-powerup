{"version":3,"file":"index.e612c49a431fc1eb7f32.js","mappings":"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","sources":["webpack://leancoffee-powerup/../node_modules/.pnpm/format-duration@3.0.2/node_modules/format-duration/format-duration.js","webpack://leancoffee-powerup/webpack/bootstrap","webpack://leancoffee-powerup/webpack/runtime/compat get default export","webpack://leancoffee-powerup/webpack/runtime/define property getters","webpack://leancoffee-powerup/webpack/runtime/hasOwnProperty shorthand","webpack://leancoffee-powerup/./src/utils/Errors.ts","webpack://leancoffee-powerup/./src/utils/Scope.ts","webpack://leancoffee-powerup/./src/storage/Storage.ts","webpack://leancoffee-powerup/./src/storage/BoardStorage.ts","webpack://leancoffee-powerup/./src/storage/CardStorage.ts","webpack://leancoffee-powerup/./src/utils/Analytics.ts","webpack://leancoffee-powerup/./src/utils/Duration.ts","webpack://leancoffee-powerup/./src/utils/I18nConfig.ts","webpack://leancoffee-powerup/./src/CapabilityHandlers.ts","webpack://leancoffee-powerup/./src/storage/MemberStorage.ts","webpack://leancoffee-powerup/./src/LeanCoffeeBase.ts","webpack://leancoffee-powerup/./src/badges/ElapsedCardBadge.ts","webpack://leancoffee-powerup/./src/badges/ElapsedCardDetailBadge.ts","webpack://leancoffee-powerup/./src/badges/VotingCardBadge.ts","webpack://leancoffee-powerup/./src/badges/VotingCardDetailBadge.ts","webpack://leancoffee-powerup/./src/utils/Notifications.ts","webpack://leancoffee-powerup/./src/utils/Discussion.ts","webpack://leancoffee-powerup/./src/utils/Hashing.ts","webpack://leancoffee-powerup/../node_modules/.pnpm/semver-parser@4.1.8/node_modules/semver-parser/modules/common.js","webpack://leancoffee-powerup/../node_modules/.pnpm/semver-parser@4.1.8/node_modules/semver-parser/modules/semver.js","webpack://leancoffee-powerup/./src/utils/VersionChecker.ts","webpack://leancoffee-powerup/./src/utils/Voting.ts","webpack://leancoffee-powerup/./src/LeanCoffeePowerUp.ts","webpack://leancoffee-powerup/./src/index.ts"],"sourcesContent":["// adapted from https://github.com/sindresorhus/parse-ms.\n// moved to internal function because parse-ms is now pure ESM.\nfunction parseMs (ms) {\n  if (typeof ms !== 'number') {\n    throw new TypeError('Expected a number')\n  }\n\n  return {\n    days: Math.trunc(ms / 86400000),\n    hours: Math.trunc(ms / 3600000) % 24,\n    minutes: Math.trunc(ms / 60000) % 60,\n    seconds: Math.trunc(ms / 1000) % 60,\n    ms: Math.trunc(ms) % 1000\n  }\n}\n\n// adapted from https://github.com/rafaelrinaldi/add-zero.\n// moved to internal function b/c addZero is unmaintained (7+ years).\n// stripped out negative sign logic since we're already doing it elsewhere.\nfunction addZero (value, digits) {\n  digits = digits || 2\n\n  let str = value.toString()\n  let size = 0\n\n  size = digits - str.length + 1\n  str = new Array(size).join('0').concat(str)\n\n  return str\n}\n\nfunction getSign (duration, showMs) {\n  if (showMs) return duration < 0 ? '-' : ''\n  return duration <= -1000 ? '-' : ''\n}\n\n/**\n * Convert a number in milliseconds to a standard duration string.\n * @param {number} ms - duration in milliseconds\n * @param {object} options - formatDuration options object\n * @param {boolean} [options.leading=false] - add leading zero\n * @param {boolean} [options.milliseconds=false] - add milliseconds\n * @returns string - formatted duration string\n */\nfunction formatDuration (ms, options) {\n  const leading = options && options.leading\n  const showMs = options && options.ms\n  const unsignedMs = ms < 0 ? -ms : ms\n  const sign = getSign(ms, showMs)\n  const t = parseMs(unsignedMs)\n  const seconds = addZero(t.seconds)\n  let output = ''\n\n  if (t.days && !output) output = sign + t.days + ':' + addZero(t.hours) + ':' + addZero(t.minutes) + ':' + seconds\n  if (t.hours && !output) output = sign + (leading ? addZero(t.hours) : t.hours) + ':' + addZero(t.minutes) + ':' + seconds\n  if (!output) output = sign + (leading ? addZero(t.minutes) : t.minutes) + ':' + seconds\n\n  if (showMs) output += '.' + addZero(t.ms, 3)\n  return output\n}\n\nmodule.exports = formatDuration\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","import BoardStorage from \"../storage/BoardStorage\";\nimport { Trello } from \"../types/TrelloPowerUp\";\n\nconst getTagsForReporting = async (\n  boardStorage: BoardStorage,\n  t: Trello.PowerUp.HostHandlers,\n): Promise<string> => {\n  const organisationIdHash = await boardStorage.read<string>(\n    t,\n    BoardStorage.ORGANISATION_HASH,\n  );\n  const boardIdHash = await boardStorage.read<string>(\n    t,\n    BoardStorage.BOARD_HASH,\n  );\n  return `organisationIdHash=${organisationIdHash}&boardIdHash=${boardIdHash}`;\n};\n\nconst isRunningInProduction = (): boolean =>\n  (process.env.NODE_ENV as Environment) === \"production\";\n\nconst ErrorReporter = (\n  target: any,\n  methodName: string,\n  descriptor: PropertyDescriptor,\n) => {\n  const originalMethod = descriptor.value;\n  const isAsync = originalMethod.constructor.name === \"AsyncFunction\";\n  const warningMessage = `Leaner Coffee Power-Up: error in ${methodName} (reported)`;\n\n  if (isAsync) {\n    descriptor.value = async function (...args: any[]) {\n      try {\n        return await originalMethod.apply(this, args);\n      } catch (error) {\n        console.warn(warningMessage);\n        window.Sentry.captureException(error);\n      }\n    };\n  } else {\n    descriptor.value = function (...args: any[]) {\n      try {\n        return originalMethod.apply(this, args);\n      } catch (error) {\n        console.warn(warningMessage);\n        window.Sentry.captureException(error);\n      }\n    };\n  }\n\n  return descriptor;\n};\n\nfunction ErrorReporterInjector<T extends { new (...args: any[]): object }>(\n  constructor: T,\n) {\n  // Get all prototype methods\n  const prototype = constructor.prototype;\n  const methodNames = Object.getOwnPropertyNames(prototype).filter(\n    (name) => typeof prototype[name] === \"function\" && name !== \"constructor\", // Skip constructor\n  );\n\n  // Apply the ErrorReporter decorator to each method\n  methodNames.forEach((methodName) => {\n    const descriptor = Object.getOwnPropertyDescriptor(prototype, methodName);\n    if (descriptor && typeof descriptor.value === \"function\") {\n      const decoratedDescriptor = ErrorReporter(\n        prototype,\n        methodName,\n        descriptor,\n      );\n\n      // console.log(\n      //   `Decorating ${constructor.name}::${methodName} with ErrorReporter`,\n      // );\n      Object.defineProperty(prototype, methodName, decoratedDescriptor);\n    }\n  });\n\n  return constructor;\n}\n\nexport {\n  getTagsForReporting,\n  isRunningInProduction,\n  ErrorReporter,\n  ErrorReporterInjector,\n};\n","const bindAll = (classInstance: any) => {\n  const p = classInstance.constructor.prototype;\n  const methodNames = Object.getOwnPropertyNames(p).filter(\n    (name) => typeof p[name] === \"function\" && name !== \"constructor\", // Skip constructor\n  );\n\n  methodNames.forEach(\n    (methodName) => (p[methodName] = p[methodName].bind(classInstance)),\n  );\n};\n\nexport { bindAll };\n","import { Trello } from \"../types/TrelloPowerUp\";\nimport { ErrorReporterInjector } from \"../utils/Errors\";\nimport { bindAll } from \"../utils/Scope\";\n\n@ErrorReporterInjector\nclass Storage {\n  scope: Trello.PowerUp.Scope;\n  visibility: Trello.PowerUp.Visibility;\n\n  constructor(\n    scope: Trello.PowerUp.Scope = \"member\",\n    visibility: Trello.PowerUp.Visibility = \"private\",\n  ) {\n    Object.assign(this, { scope, visibility });\n    bindAll(this);\n  }\n\n  canWrite(t: Trello.PowerUp.HostHandlers): boolean {\n    return this.scope === \"member\" || t.memberCanWriteToModel(this.scope);\n  }\n\n  async isObserver(t: Trello.PowerUp.AnonymousHostHandlers) {\n    const board = await t.board(\"memberships\");\n    const currentMember = await t.member(\"id\");\n    const myMembership = board.memberships.find(\n      (m) => m.idMember === currentMember.id,\n    );\n    return myMembership && myMembership.memberType === \"observer\";\n  }\n\n  read<T>(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    key: string,\n    cardId?: string,\n  ): PromiseLike<T> {\n    return t.get(cardId ?? this.scope, this.visibility, key);\n  }\n\n  async write(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    key: string,\n    value: any,\n    cardId?: string,\n  ): Promise<void> {\n    if (!(\"memberCanWriteToModel\" in t) || this.canWrite(t)) {\n      await t.set(cardId ?? this.scope, this.visibility, key, value);\n    } else {\n      window.Sentry.captureException(new Error(\"Error while editing scope\"), {\n        contexts: {\n          WriteOperation: {\n            scope: this.scope,\n            visibility: this.visibility,\n            key: key,\n            hasCardId: !!cardId,\n            isObserver: await this.isObserver(t),\n          },\n        },\n      });\n    }\n  }\n\n  async writeMultiple(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    entries: {\n      [key: string]: any;\n    },\n    cardId?: string,\n  ): Promise<void> {\n    if (!(\"memberCanWriteToModel\" in t) || this.canWrite(t)) {\n      await t.set(cardId ?? this.scope, this.visibility, entries);\n    } else {\n      window.Sentry.captureException(new Error(\"Error while editing scope\"), {\n        contexts: {\n          WriteOperation: {\n            scope: this.scope,\n            visibility: this.visibility,\n            key: entries,\n            hasCardId: !!cardId,\n            isObserver: await this.isObserver(t),\n          },\n        },\n      });\n    }\n  }\n\n  async delete(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    key: string,\n    cardId?: string,\n  ): Promise<void> {\n    if (!(\"memberCanWriteToModel\" in t) || this.canWrite(t)) {\n      return t.remove(cardId ?? this.scope, this.visibility, key);\n    } else {\n      window.Sentry.captureException(new Error(\"Error while editing scope\"), {\n        contexts: {\n          DeleteOperation: {\n            scope: this.scope,\n            visibility: this.visibility,\n            key: key,\n            hasCardId: !!cardId,\n            isObserver: await this.isObserver(t),\n          },\n        },\n      });\n    }\n  }\n\n  async deleteMultiple(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    entries: string[],\n    cardId?: string,\n  ): Promise<void> {\n    if (!(\"memberCanWriteToModel\" in t) || this.canWrite(t)) {\n      return t.remove(cardId ?? this.scope, this.visibility, entries);\n    } else {\n      window.Sentry.captureException(new Error(\"Error while editing scope\"), {\n        contexts: {\n          DeleteOperation: {\n            scope: this.scope,\n            visibility: this.visibility,\n            key: entries,\n            hasCardId: !!cardId,\n            isObserver: await this.isObserver(t),\n          },\n        },\n      });\n    }\n  }\n}\n\nexport default Storage;\n","import Storage from \"./Storage\";\n\nclass BoardStorage extends Storage {\n  static DISCUSSION_STATUS = \"leancoffeeDiscussionStatus\";\n  static DISCUSSION_CARD_ID = \"leancoffeeDiscussionCardId\";\n  static DISCUSSION_STARTED_AT = \"leancoffeeDiscussionStartedAt\";\n  static DISCUSSION_PREVIOUS_ELAPSED = \"leancoffeeDiscussionPreviousElapsed\";\n  static DISCUSSION_INTERVAL_ID = \"leancoffeeDiscussionIntervalId\";\n  static POWER_UP_INSTALLATION_DATE = \"powerUpInstallationDate\";\n  static ORGANISATION_HASH = \"organisationHash\";\n  static BOARD_HASH = \"boardHash\";\n\n  constructor() {\n    super(\"board\", \"shared\");\n  }\n}\n\nexport default BoardStorage;\n","import Storage from \"./Storage\";\n\nclass CardStorage extends Storage {\n  static DISCUSSION_STATUS = \"leancoffeeDiscussionStatus\";\n  static DISCUSSION_ELAPSED = \"leancoffeeDiscussionElapsed\";\n  static DISCUSSION_THUMBS = \"leancoffeeDiscussionThumbs\";\n  static VOTES = \"leancoffeeVotes\";\n  static DISCUSSION_BUTTON_LABEL = \"discussionButtonLabel\";\n\n  constructor() {\n    super(\"card\", \"shared\");\n  }\n}\n\nexport default CardStorage;\n","import BoardStorage from \"../storage/BoardStorage\";\nimport { Trello } from \"../types/TrelloPowerUp\";\n\nimport CustomPayload = umami.CustomPayload;\n\nconst sanitiseUrl = (urlString: string): string => {\n  const url = new URL(urlString);\n  return (\n    url.protocol +\n    url.hostname +\n    (url.port ? `:${url.port}` : \"\") +\n    url.pathname\n  );\n};\n\nconst beforeSend = (event: string, payload: CustomPayload): CustomPayload => {\n  return {\n    ...payload,\n    ...{\n      referrer: window.LeanerCoffeeAnalyticsReferrer,\n      hostname: window.LeanerCoffeeAnalyticsHostname,\n    },\n    url: sanitiseUrl(payload.url),\n  };\n};\n\nconst pageview = async (window: Window, eventData: umami.EventData = {}) => {\n  if (window.umami) {\n    await window.umami.track((props: any) => {\n      return { ...props, ...eventData };\n    });\n  } else {\n    console.warn(\"Umami not available for pageview\", eventData);\n  }\n};\n\nconst event = async (\n  window: Window,\n  eventName: string,\n  eventData?: umami.EventData,\n) => {\n  if (window.umami) {\n    await window.umami.track(eventName, eventData);\n  } else {\n    console.warn(\"Umami not available for event \" + eventName, eventData);\n  }\n};\n\nconst getOverrides = async (\n  boardStorage: BoardStorage,\n  t: Trello.PowerUp.HostHandlers,\n): Promise<string> => {\n  const organisationIdHash = await boardStorage.read<string>(\n    t,\n    BoardStorage.ORGANISATION_HASH,\n  );\n  const boardIdHash = await boardStorage.read<string>(\n    t,\n    BoardStorage.BOARD_HASH,\n  );\n  const referrer = encodeURIComponent(\"https://\" + organisationIdHash);\n  return `referrer=${referrer}&hostname=${boardIdHash}`;\n};\n\nconst Analytics = {\n  beforeSend,\n  pageview,\n  event,\n  getOverrides,\n};\n\nexport default Analytics;\n","const INTERVALS = {\n  ONE_DAY: 24 * 60 * 60 * 1000,\n  ONE_WEEK: 7 * 24 * 60 * 60 * 1000,\n  ONE_MONTH: 30 * 24 * 60 * 60 * 1000,\n  SIX_MONTHS: 6 * 30 * 24 * 60 * 60 * 1000,\n  ONE_YEAR: 365 * 24 * 60 * 60 * 1000,\n  TWO_YEARS: 2 * 365 * 24 * 60 * 60 * 1000,\n  FIVE_YEARS: 5 * 365 * 24 * 60 * 60 * 1000,\n};\n\nfunction classifyDuration(duration: number): string {\n  switch (true) {\n    case duration < INTERVALS.ONE_DAY:\n      return \"Less than a day\";\n\n    case duration >= INTERVALS.ONE_DAY && duration < INTERVALS.ONE_WEEK:\n      return \"Between a day and a week\";\n\n    case duration >= INTERVALS.ONE_WEEK && duration < INTERVALS.ONE_MONTH:\n      return \"Between a week and a month\";\n\n    case duration >= INTERVALS.ONE_MONTH && duration < INTERVALS.SIX_MONTHS:\n      return \"Between a month and six months\";\n\n    case duration >= INTERVALS.SIX_MONTHS && duration < INTERVALS.ONE_YEAR:\n      return \"Between six months and a year\";\n\n    case duration >= INTERVALS.ONE_YEAR && duration < INTERVALS.TWO_YEARS:\n      return \"Between one and two years\";\n\n    case duration >= INTERVALS.TWO_YEARS && duration < INTERVALS.FIVE_YEARS:\n      return \"Between two and five years\";\n\n    case duration >= INTERVALS.FIVE_YEARS:\n      return \"More than five years\";\n\n    default:\n      return \"Invalid duration\";\n  }\n}\n\nexport default classifyDuration;\n","import { Trello } from \"../types/TrelloPowerUp\";\n\nconst config: Config = process.env.CONFIG as unknown as Config;\nconst { supportedLocales } = config[process.env.NODE_ENV as Environment];\n\nexport const I18nConfig: Trello.PowerUp.Localization = {\n  defaultLocale: \"en\",\n  supportedLocales,\n  resourceUrl: \"/i18n/{locale}.json\",\n};\n","import LeanCoffeePowerUp from \"./LeanCoffeePowerUp\";\nimport BoardStorage from \"./storage/BoardStorage\";\nimport CardStorage from \"./storage/CardStorage\";\nimport { Trello } from \"./types/TrelloPowerUp\";\nimport Analytics from \"./utils/Analytics\";\nimport classifyDuration from \"./utils/Duration\";\nimport { ErrorReporterInjector } from \"./utils/Errors\";\nimport { I18nConfig } from \"./utils/I18nConfig\";\nimport { bindAll } from \"./utils/Scope\";\n\n@ErrorReporterInjector\nclass CapabilityHandlers {\n  powerUp: LeanCoffeePowerUp;\n\n  constructor(powerUp: LeanCoffeePowerUp) {\n    this.powerUp = powerUp;\n    bindAll(this);\n  }\n\n  async boardButtonsHandler(\n    t: Trello.PowerUp.IFrame,\n  ): Promise<Trello.PowerUp.BoardButtonCallback[]> {\n    // We don't want to show the board button for the release notes\n    // if there is a new patch version: only for minor and major updates.\n    if (!(await this.powerUp.versionChecker.isThereANewMinorOrMajor(t))) {\n      return [];\n    }\n\n    return [\n      {\n        icon: {\n          dark: `${this.powerUp.baseUrl}/assets/moka_white.svg`,\n          light: `${this.powerUp.baseUrl}/assets/moka.svg`,\n        },\n        text: t.localizeKey(\"boardButtonLabel\"),\n        callback: this.powerUp.versionChecker.showMenu,\n      },\n    ];\n  }\n\n  async cardBackSection(\n    t: Trello.PowerUp.IFrame,\n  ): Promise<Trello.PowerUp.CardBackSection> {\n    const discussionStatus =\n      await this.powerUp.discussion.cardStorage.read<DiscussionStatus>(\n        t,\n        CardStorage.DISCUSSION_STATUS,\n      );\n    if (discussionStatus === undefined) {\n      return null;\n    }\n\n    return {\n      title: t.localizeKey(\"discussion\"),\n      icon: `${this.powerUp.baseUrl}/assets/powerup/timer.svg`,\n      content: {\n        type: \"iframe\",\n        url: t.signUrl(\n          `${this.powerUp.baseUrl}/discussion-ui.html?${await Analytics.getOverrides(this.powerUp.boardStorage, t)}`,\n        ),\n      },\n    };\n  }\n\n  async cardBadges(\n    t: Trello.PowerUp.IFrame,\n  ): Promise<Trello.PowerUp.CardBadge[]> {\n    const badges = [\n      await this.powerUp.elapsedCardBadge.render(t),\n      await this.powerUp.votingCardBadge.render(t),\n    ];\n\n    return badges.filter((badge) => badge);\n  }\n\n  async cardButtons(\n    t: Trello.PowerUp.IFrame,\n  ): Promise<Trello.PowerUp.CardButton[]> {\n    return [\n      {\n        icon: `${this.powerUp.baseUrl}/assets/powerup/timer.svg`,\n        text: await this.powerUp.getButtonLabel(t),\n        callback: this.powerUp.handleDiscussion,\n      },\n      {\n        icon: `${this.powerUp.baseUrl}/assets/powerup/heart.svg`,\n        text: t.localizeKey(\"vote\", {\n          symbol: (await this.powerUp.voting.hasCurrentMemberVoted(t))\n            ? \"☑\"\n            : \"☐\",\n        }),\n        callback: this.powerUp.handleVoting,\n      },\n    ];\n  }\n\n  async cardDetailBadges(\n    t: Trello.PowerUp.IFrame,\n  ): Promise<Trello.PowerUp.CardDetailBadge[]> {\n    const badges = [\n      await this.powerUp.elapsedCardDetailBadge.render(t),\n      await this.powerUp.votingCardDetailBadge.render(t),\n    ];\n\n    return badges.filter((badge) => badge);\n  }\n  async listActions(\n    t: Trello.PowerUp.IFrame,\n  ): Promise<Trello.PowerUp.ListAction[]> {\n    return Promise.resolve([\n      {\n        text: t.localizeKey(\"clearVotesFromList\"),\n        callback: async (t2): Promise<void> => {\n          const result = await t2.list(\"cards\");\n          result.cards.forEach(({ id }) => {\n            this.powerUp.cardStorage.deleteMultiple(\n              t2,\n              [CardStorage.VOTES],\n              id,\n            );\n          });\n          await Analytics.event(window, \"listVotesCleared\");\n        },\n      },\n    ]);\n  }\n\n  async listSorters(\n    t: Trello.PowerUp.IFrame,\n  ): Promise<Trello.PowerUp.ListSorter[]> {\n    return Promise.resolve([\n      {\n        text: t.localizeKey(\"sortByVote\"),\n        callback: async (t2, opts): Promise<{ sortedIds: string[] }> => {\n          const votingData = await Promise.all(\n            opts.cards.map(\n              async (\n                card,\n              ): Promise<{ leanCoffeeVotes: number; id: string }> => {\n                const leanCoffeeVotes =\n                  await this.powerUp.voting.countVotesByCard(t2, card.id);\n                return { leanCoffeeVotes, id: card.id };\n              },\n            ),\n          );\n\n          const sortedCards = votingData.sort((cardA, cardB) => {\n            if (cardA.leanCoffeeVotes < cardB.leanCoffeeVotes) {\n              return 1;\n            }\n            if (cardB.leanCoffeeVotes < cardA.leanCoffeeVotes) {\n              return -1;\n            }\n            return 0;\n          });\n\n          await Analytics.event(window, \"listVotesSorted\");\n\n          return {\n            sortedIds: sortedCards.map((card) => card.id),\n          };\n        },\n      },\n    ]);\n  }\n\n  async onEnable(t: Trello.PowerUp.IFrame): Promise<void> {\n    // There can be a race condition between the power-up starting\n    // and the on-enable event being triggered.\n    await navigator.locks.request(\n      \"powerup_init\",\n      { ifAvailable: true },\n      async (lock) => {\n        const isInitialised = !!(await this.powerUp.boardStorage.read<string>(\n          t,\n          BoardStorage.POWER_UP_INSTALLATION_DATE,\n        ));\n        // if the lock is null, it means LeanCoffeePowerup::start is taking care of initialisation\n        if (lock === null || isInitialised) {\n          return;\n        }\n\n        if (!isInitialised) {\n          await this.powerUp.handlePowerupEnabled(t);\n        }\n      },\n    );\n\n    await Analytics.event(window, \"enabled\");\n  }\n  async onDisable(t: Trello.PowerUp.IFrame): Promise<void> {\n    const installationDate = await this.powerUp.boardStorage.read<string>(\n      t,\n      BoardStorage.POWER_UP_INSTALLATION_DATE,\n    );\n\n    await Analytics.event(window, \"disabled\", {\n      installedFor: classifyDuration(Date.now() - Date.parse(installationDate)),\n    });\n  }\n\n  async showSettings(t: Trello.PowerUp.IFrame): Promise<void> {\n    return t.popup({\n      title: `Leaner Coffee ${__BUILDTIME_VERSION__}`,\n      url: `${this.powerUp.baseUrl}/settings.html?${await Analytics.getOverrides(this.powerUp.boardStorage, t)}`,\n      height: 184,\n      args: {\n        localization: I18nConfig,\n      },\n    });\n  }\n\n  getAll(): Trello.PowerUp.CapabilityHandlers {\n    return {\n      \"board-buttons\": this.boardButtonsHandler,\n      \"card-back-section\": this.cardBackSection,\n      \"card-badges\": this.cardBadges,\n      \"card-buttons\": this.cardButtons,\n      \"card-detail-badges\": this.cardDetailBadges,\n      \"list-actions\": this.listActions,\n      \"list-sorters\": this.listSorters,\n      \"on-enable\": this.onEnable,\n      \"on-disable\": this.onDisable,\n      \"show-settings\": this.showSettings,\n    };\n  }\n}\n\nexport default CapabilityHandlers;\n","import Storage from \"./Storage\";\n\nclass MemberStorage extends Storage {\n  static POWER_UP_VERSION = \"powerUpVersion\";\n\n  constructor() {\n    super(\"member\", \"private\");\n  }\n}\n\nexport default MemberStorage;\n","import BoardStorage from \"./storage/BoardStorage\";\nimport CardStorage from \"./storage/CardStorage\";\nimport MemberStorage from \"./storage/MemberStorage\";\nimport { Trello } from \"./types/TrelloPowerUp\";\nimport { ErrorReporterInjector } from \"./utils/Errors\";\nimport { bindAll } from \"./utils/Scope\";\n\nexport interface LeanCoffeeBaseParams {\n  w: Window;\n  config: Config;\n  t?: Trello.PowerUp | Trello.PowerUp.IFrame;\n}\n\n@ErrorReporterInjector\nexport class LeanCoffeeBase {\n  w: Window;\n  boardStorage: BoardStorage;\n  cardStorage: CardStorage;\n  memberStorage: MemberStorage;\n  config: Config;\n\n  constructor({ w, config }: LeanCoffeeBaseParams) {\n    this.w = w;\n    this.config = config;\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n    this.memberStorage = new MemberStorage();\n    bindAll(this);\n  }\n}\n","import formatDuration from \"format-duration\";\n\nimport { Trello } from \"../types/TrelloPowerUp\";\nimport Discussion from \"../utils/Discussion\";\nimport { ErrorReporterInjector } from \"../utils/Errors\";\nimport { bindAll } from \"../utils/Scope\";\n\n@ErrorReporterInjector\nclass ElapsedCardBadge {\n  discussion: Discussion;\n\n  constructor(discussion: Discussion) {\n    this.discussion = discussion;\n    this.render = this.render.bind(this);\n    bindAll(this);\n  }\n\n  getText = async (\n    t: Trello.PowerUp.IFrame,\n    elapsed: number,\n  ): Promise<string> => formatDuration(elapsed);\n\n  getColor = async (\n    t: Trello.PowerUp.IFrame,\n  ): Promise<Trello.PowerUp.Colors> => {\n    const isOngoing = await this.discussion.isOngoingFor(t);\n\n    if (isOngoing) {\n      return \"orange\";\n    }\n\n    return (await this.discussion.isPausedFor(t)) ? \"yellow\" : \"light-gray\";\n  };\n\n  // Unable to use class properties here because in subclasses\n  // I need to user `super`, and it wouldn't be possible. See:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/super#accessing_super_in_class_field_declaration\n  async render(t: Trello.PowerUp.IFrame): Promise<Trello.PowerUp.CardBadge> {\n    const elapsed = await this.discussion.getElapsed(t);\n    if (!elapsed) {\n      return null;\n    }\n\n    return {\n      text: await this.getText(t, elapsed),\n      color: await this.getColor(t),\n    };\n  }\n}\n\nexport default ElapsedCardBadge;\n","import ElapsedCardBadge from \"./ElapsedCardBadge\";\nimport CardStorage from \"../storage/CardStorage\";\nimport { Trello } from \"../types/TrelloPowerUp\";\n\nclass ElapsedCardDetailBadge extends ElapsedCardBadge {\n  render = async (\n    t: Trello.PowerUp.IFrame,\n  ): Promise<Trello.PowerUp.CardDetailBadge> => {\n    const discussionStatus =\n      await this.discussion.cardStorage.read<DiscussionStatus>(\n        t,\n        CardStorage.DISCUSSION_STATUS,\n      );\n    if (discussionStatus !== \"ENDED\") {\n      return null;\n    }\n\n    const badge = (await super.render(t)) as Trello.PowerUp.CardDetailBadge;\n    badge.title = t.localizeKey(\"discussionDurationTitle\");\n    return badge;\n  };\n}\n\nexport default ElapsedCardDetailBadge;\n","import BoardStorage from \"../storage/BoardStorage\";\nimport CardStorage from \"../storage/CardStorage\";\nimport { Trello } from \"../types/TrelloPowerUp\";\nimport { ErrorReporterInjector } from \"../utils/Errors\";\nimport { bindAll } from \"../utils/Scope\";\nimport Voting from \"../utils/Voting\";\n\n@ErrorReporterInjector\nclass VotingCardBadge {\n  w: Window;\n  baseUrl: string;\n  voting: Voting;\n  boardStorage: BoardStorage;\n  cardStorage: CardStorage;\n\n  constructor(\n    w: Window,\n    baseUrl: string,\n    voting: Voting,\n    boardStorage: BoardStorage,\n    cardStorage: CardStorage,\n  ) {\n    this.w = w;\n    this.baseUrl = baseUrl;\n    this.voting = voting;\n    this.boardStorage = boardStorage;\n    this.cardStorage = cardStorage;\n    this.render = this.render.bind(this);\n    bindAll(this);\n  }\n\n  getVoters = async (t: Trello.PowerUp.IFrame): Promise<{ text: string }[]> => {\n    const votes: Votes = (await this.voting.getVotes(t)) || {};\n\n    return Object.values(votes).reduce(\n      (knownVoters: { text: string; avatar: string }[], vote) => {\n        if (vote.username) {\n          knownVoters.push({\n            text: `${vote.fullName} (${vote.username})`,\n            avatar: vote.avatar,\n          });\n        }\n\n        return knownVoters;\n      },\n      [],\n    );\n  };\n\n  // Unable to use class properties here because in subclasses\n  // I need to user `super`, and it wouldn't be possible. See:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/super#accessing_super_in_class_field_declaration\n  async render(t: Trello.PowerUp.IFrame): Promise<Trello.PowerUp.CardBadge> {\n    const voters = await this.getVoters(t);\n\n    if (!voters.length) {\n      return null;\n    }\n\n    const hasVoted = await this.voting.hasCurrentMemberVoted(t);\n\n    return {\n      text: voters.length.toString(),\n      color: hasVoted ? \"blue\" : null,\n      icon: `${this.baseUrl}/assets/powerup/${hasVoted ? \"heart_white.svg\" : \"heart.svg\"}`,\n    };\n  }\n}\n\nexport default VotingCardBadge;\n","import VotingCardBadge from \"./VotingCardBadge\";\nimport CardStorage from \"../storage/CardStorage\";\nimport { Trello } from \"../types/TrelloPowerUp\";\nimport Analytics from \"../utils/Analytics\";\nimport { getTagsForReporting } from \"../utils/Errors\";\nimport { I18nConfig } from \"../utils/I18nConfig\";\n\nclass VotingCardDetailBadge extends VotingCardBadge {\n  clearVoters = async (t: Trello.PowerUp.IFrame) => {\n    const totalVoters = await this.getVoters(t);\n\n    await this.cardStorage.delete(t, CardStorage.VOTES);\n    await Analytics.event(this.w, \"votesCleared\", {\n      total: totalVoters.length,\n    });\n  };\n\n  showVoters = async (t: Trello.PowerUp.IFrame): Promise<void> => {\n    const items = await this.getVoters(t);\n\n    if (!items.length) {\n      return;\n    }\n\n    await t.popup({\n      title: t.localizeKey(\"voters\"),\n      url: `./voters.html?${await Analytics.getOverrides(this.boardStorage, t)}&${await getTagsForReporting(this.boardStorage, t)}`,\n      args: {\n        items,\n        localization: I18nConfig,\n      },\n      callback: this.clearVoters,\n    });\n  };\n\n  render = async (\n    t: Trello.PowerUp.IFrame,\n  ): Promise<Trello.PowerUp.CardDetailBadge> => {\n    const commonData = (await super.render(\n      t,\n    )) as Trello.PowerUp.CardDetailBadge;\n\n    if (commonData) {\n      commonData.title = t.localizeKey(\"voters\");\n      delete commonData.icon;\n      commonData.callback = this.showVoters;\n    }\n\n    return commonData;\n  };\n}\n\nexport default VotingCardDetailBadge;\n","import { ErrorReporterInjector } from \"./Errors\";\nimport { bindAll } from \"./Scope\";\n\nexport type NotificationType = {\n  [key in \"audio\" | \"text\"]: string;\n};\n\n@ErrorReporterInjector\nclass Notifications {\n  w: Window;\n  baseUrl: string;\n  audioContext: AudioContext;\n\n  constructor(window: Window, baseUrl: string) {\n    this.w = window;\n    this.baseUrl = baseUrl;\n    bindAll(this);\n  }\n\n  async load(url: string): Promise<AudioBufferSourceNode> {\n    const remoteAudioFile = await fetch(url);\n    const audioData = await remoteAudioFile.arrayBuffer();\n    const audioBuffer = await this.audioContext.decodeAudioData(audioData);\n    const sourceNode = this.audioContext.createBufferSource();\n    sourceNode.buffer = audioBuffer;\n    sourceNode.connect(this.audioContext.destination);\n    return sourceNode;\n  }\n\n  async play(type: NotificationType): Promise<void> {\n    this.audioContext =\n      this.audioContext || new (AudioContext || this.w.webkitAudioContext)();\n    const audio = await this.load(`${this.baseUrl}/${type.audio}`);\n    audio.start();\n  }\n\n  open(type: NotificationType, cardName: string): void {\n    new Notification(cardName, {\n      body: type.text,\n      icon: `${this.baseUrl}/assets/timer.png`,\n    });\n  }\n\n  show(type: NotificationType, cardName: string): void {\n    if (!(\"Notification\" in this.w) || Notification.permission === \"denied\") {\n      return;\n    }\n\n    if (Notification.permission === \"granted\") {\n      this.open(type, cardName);\n    } else {\n      Notification.requestPermission((permission) => {\n        if (permission === \"granted\") {\n          this.open(type, cardName);\n        }\n      });\n    }\n  }\n}\n\nexport default Notifications;\n","import Analytics from \"./Analytics\";\nimport { ErrorReporterInjector } from \"./Errors\";\nimport Notifications, { NotificationType } from \"./Notifications\";\nimport { bindAll } from \"./Scope\";\nimport BoardStorage from \"../storage/BoardStorage\";\nimport CardStorage from \"../storage/CardStorage\";\nimport { Trello } from \"../types/TrelloPowerUp\";\n\n@ErrorReporterInjector\nclass Discussion {\n  w: Window;\n  p: Trello.PowerUp.AnonymousHostHandlers;\n  baseUrl: string;\n  maxDiscussionDuration: number;\n  notifications: Notifications;\n  boardStorage: BoardStorage;\n  cardStorage: CardStorage;\n\n  constructor(window: Window, baseUrl: string, maxDiscussionDuration: number) {\n    this.w = window;\n    this.baseUrl = baseUrl;\n    this.notifications = new Notifications(this.w, this.baseUrl);\n    this.maxDiscussionDuration = maxDiscussionDuration;\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n    bindAll(this);\n  }\n\n  init = (p: Trello.PowerUp.AnonymousHostHandlers): void => {\n    this.p = p;\n  };\n\n  getElapsedNotification = (): NotificationType => ({\n    audio: \"assets/looking_down.mp3\",\n    text: this.p.localizeKey(\"elapsedNotification\"),\n  });\n\n  isOngoingOrPausedForAnotherCard = async (\n    t: Trello.PowerUp.IFrame,\n  ): Promise<boolean> => {\n    const boardStatus = await this.boardStorage.read<DiscussionStatus>(\n      t,\n      BoardStorage.DISCUSSION_STATUS,\n    );\n    const cardId = await this.boardStorage.read<string>(\n      t,\n      BoardStorage.DISCUSSION_CARD_ID,\n    );\n\n    return (\n      [\"ONGOING\", \"PAUSED\"].includes(boardStatus) &&\n      cardId !== t.getContext().card\n    );\n  };\n\n  hasEverBeenDiscussed = async (t: Trello.PowerUp.IFrame): Promise<boolean> => {\n    const cardStatus = await this.cardStorage.read<DiscussionStatus>(\n      t,\n      CardStorage.DISCUSSION_STATUS,\n    );\n    return cardStatus !== undefined;\n  };\n\n  hasNotBeenArchived = async (\n    t: Trello.PowerUp.IFrame,\n    cardId: string,\n  ): Promise<boolean> => {\n    const allCards = await t.cards(\"id\", \"name\");\n    return !!allCards.find((card) => card.id === cardId);\n  };\n\n  isOngoingFor = async (t: Trello.PowerUp.IFrame): Promise<boolean> => {\n    const cardStatus = await this.cardStorage.read<DiscussionStatus>(\n      t,\n      CardStorage.DISCUSSION_STATUS,\n    );\n    return cardStatus === \"ONGOING\";\n  };\n\n  isPausedFor = async (t: Trello.PowerUp.IFrame): Promise<boolean> => {\n    const cardStatus = await this.cardStorage.read<DiscussionStatus>(\n      t,\n      CardStorage.DISCUSSION_STATUS,\n    );\n    return cardStatus === \"PAUSED\";\n  };\n\n  getElapsed = (t: Trello.PowerUp.IFrame): PromiseLike<number> =>\n    this.cardStorage.read<number>(t, CardStorage.DISCUSSION_ELAPSED);\n\n  updateElapsed = async (t: Trello.PowerUp.IFrame): Promise<void> => {\n    const startedAt = await this.boardStorage.read<number>(\n      t,\n      BoardStorage.DISCUSSION_STARTED_AT,\n    );\n    const elapsed = Date.now() - startedAt;\n\n    await this.saveElapsed(t);\n\n    if (elapsed > this.maxDiscussionDuration) {\n      await this.pause(t, true);\n      await Analytics.event(this.w, \"discussionStatusChanged\", {\n        newStatus: \"ended\",\n      });\n    }\n  };\n\n  saveElapsed = async (t: Trello.PowerUp.IFrame): Promise<void> => {\n    const cardId = await this.boardStorage.read<string>(\n      t,\n      BoardStorage.DISCUSSION_CARD_ID,\n    );\n    const startedAt = await this.boardStorage.read<number>(\n      t,\n      BoardStorage.DISCUSSION_STARTED_AT,\n    );\n    const previousElapsed =\n      (await this.boardStorage.read<number>(\n        t,\n        BoardStorage.DISCUSSION_PREVIOUS_ELAPSED,\n      )) || 0;\n    const elapsed = startedAt ? Date.now() - startedAt : 0;\n\n    await this.cardStorage.write(\n      t,\n      CardStorage.DISCUSSION_ELAPSED,\n      elapsed + previousElapsed,\n      cardId,\n    );\n  };\n\n  start = async (t: Trello.PowerUp.IFrame): Promise<void> => {\n    await this.boardStorage.writeMultiple(t, {\n      [BoardStorage.DISCUSSION_STATUS]: \"ONGOING\",\n      [BoardStorage.DISCUSSION_CARD_ID]: t.getContext().card,\n      [BoardStorage.DISCUSSION_STARTED_AT]: Date.now(),\n      [BoardStorage.DISCUSSION_PREVIOUS_ELAPSED]: await this.getElapsed(t),\n      [BoardStorage.DISCUSSION_INTERVAL_ID]: setInterval(\n        this.updateElapsed,\n        5000,\n        t,\n      ),\n    });\n\n    await this.cardStorage.write(t, CardStorage.DISCUSSION_STATUS, \"ONGOING\");\n    await this.cardStorage.delete(t, CardStorage.DISCUSSION_THUMBS);\n  };\n\n  pause = async (t: Trello.PowerUp.IFrame, notify = false): Promise<void> => {\n    const intervalId = await this.boardStorage.read<DiscussionIntervalId>(\n      t,\n      BoardStorage.DISCUSSION_INTERVAL_ID,\n    );\n    const cardId = await this.boardStorage.read<string>(\n      t,\n      BoardStorage.DISCUSSION_CARD_ID,\n    );\n    const cardName = (await t.cards(\"id\", \"name\")).find(\n      (card) => card.id === cardId,\n    ).name;\n\n    clearInterval(intervalId);\n\n    await this.cardStorage.write(t, CardStorage.DISCUSSION_STATUS, \"PAUSED\");\n    await this.saveElapsed(t);\n    await this.boardStorage.writeMultiple(t, {\n      [BoardStorage.DISCUSSION_STATUS]: \"PAUSED\",\n      [BoardStorage.DISCUSSION_STARTED_AT]: null,\n      [BoardStorage.DISCUSSION_PREVIOUS_ELAPSED]: await this.getElapsed(t),\n      [BoardStorage.DISCUSSION_INTERVAL_ID]: null,\n    });\n\n    if (notify) {\n      const elapsedNotification = this.getElapsedNotification();\n      await this.notifications.play(elapsedNotification);\n      this.notifications.show(elapsedNotification, cardName);\n    }\n  };\n\n  end = async (t: Trello.PowerUp.IFrame): Promise<void> => {\n    const intervalId = await this.boardStorage.read<DiscussionIntervalId>(\n      t,\n      BoardStorage.DISCUSSION_INTERVAL_ID,\n    );\n    const cardId = await this.boardStorage.read<string>(\n      t,\n      BoardStorage.DISCUSSION_CARD_ID,\n    );\n    clearInterval(intervalId);\n\n    await this.cardStorage.write(\n      t,\n      CardStorage.DISCUSSION_STATUS,\n      \"ENDED\",\n      cardId,\n    );\n    await this.saveElapsed(t);\n    await this.cardStorage.deleteMultiple(\n      t,\n      [CardStorage.DISCUSSION_THUMBS],\n      cardId,\n    );\n    await this.boardStorage.deleteMultiple(t, [\n      BoardStorage.DISCUSSION_STATUS,\n      BoardStorage.DISCUSSION_CARD_ID,\n      BoardStorage.DISCUSSION_STARTED_AT,\n      BoardStorage.DISCUSSION_PREVIOUS_ELAPSED,\n      BoardStorage.DISCUSSION_INTERVAL_ID,\n    ]);\n  };\n\n  reset = async (t: Trello.PowerUp.IFrame): Promise<void> => {\n    if (await this.hasEverBeenDiscussed(t)) {\n      await this.cardStorage.deleteMultiple(\n        t,\n        [\n          CardStorage.DISCUSSION_STATUS,\n          CardStorage.DISCUSSION_ELAPSED,\n          CardStorage.DISCUSSION_THUMBS,\n        ],\n        t.getContext().card,\n      );\n    }\n  };\n}\n\nexport default Discussion;\n","// https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\nexport async function digestMessage(message: string) {\n  const msgUint8 = new TextEncoder().encode(message); // encode as (utf-8) Uint8Array\n  const hashBuffer = await window.crypto.subtle.digest(\"SHA-256\", msgUint8); // hash the message\n  const hashArray = Array.from(new Uint8Array(hashBuffer)); // convert buffer to byte array\n  const hashHex = hashArray\n    .map((b) => b.toString(16).padStart(2, \"0\"))\n    .join(\"\"); // convert bytes to hex string\n  return hashHex;\n}\n","/**\n * common.js\n */\n\n/* constants */\nconst TYPE_FROM = 8;\nconst TYPE_TO = -1;\n\n/**\n * get type\n * @param {*} o - object to check\n * @returns {string} - type of object\n */\nexport const getType = o =>\n  Object.prototype.toString.call(o).slice(TYPE_FROM, TYPE_TO);\n\n/**\n * is string\n * @param {*} o - object to check\n * @returns {boolean} - result\n */\nexport const isString = o => typeof o === 'string' || o instanceof String;\n","/**\n * semver.js\n * @see {@link http://semver.org/|Semantic Versioning}\n * @see {@link https://github.com/mojombo/semver/|mojombo/semver}\n */\n\n/* api */\nimport { getType, isString } from './common.js';\n\n/* constants */\nconst BASE = 10;\nconst INT = '0|[1-9]\\\\d*';\nconst ALPHA_NUM = '\\\\d*[A-Z-][A-Z\\\\d-]*';\nconst PRE_PART = `(?:${ALPHA_NUM}|${INT})`;\nconst PRE = `${PRE_PART}(?:\\\\.${PRE_PART})*`;\nconst BUILD_PART = `(?:${ALPHA_NUM}|\\\\d+)`;\nconst BUILD = `${BUILD_PART}(?:\\\\.${BUILD_PART})*`;\nconst SEMVER =\n  `((?:${INT})(?:\\\\.(?:${INT})){2})(?:-(${PRE}))?(?:\\\\+(${BUILD}))?`;\nconst REGEXP_INT = new RegExp(`^(?:${INT})$`);\nconst REGEXP_SEMVER = new RegExp(`^v?${SEMVER}$`, 'i');\nconst REGEXP_SEMVER_STRICT = new RegExp(`^${SEMVER}$`, 'i');\n\n/**\n * parsed SemVer object\n * @typedef {object} SemVerObject\n * @property {string} version - version string\n * @property {boolean} matches - matches SemVer format\n * @property {number|undefined} major - major version\n * @property {number|undefined} minor - minor version\n * @property {number|undefined} patch - patch version\n * @property {Array<string|number>|undefined} pre - pre-release version in array\n * @property {Array<string|number>|undefined} build - build ID in array\n */\n\n/**\n * is valid SemVer string\n * @param {string} version - version string\n * @param {boolean} [strict] - reject 'v' prefixed\n * @returns {boolean} - result\n */\nexport const isValidSemVer = (version, strict = false) => {\n  if (!isString(version)) {\n    throw new TypeError(`Expected String but got ${getType(version)}.`);\n  }\n  const reg = strict ? REGEXP_SEMVER_STRICT : REGEXP_SEMVER;\n  return reg.test(version);\n};\n\n/**\n * parse version part\n * @param {string} part - version part\n * @param {boolean} [nonPosInt] - accept non positive integer\n * @returns {string|number} - parsed version part\n */\nexport const parseVersionPart = (part, nonPosInt = false) => {\n  if (!isString(part)) {\n    throw new TypeError(`Expected String but got ${getType(part)}.`);\n  }\n  if (!(nonPosInt || REGEXP_INT.test(part))) {\n    throw new Error(`${part} is not a stringified positive integer.`);\n  }\n  let parsedPart;\n  if (REGEXP_INT.test(part)) {\n    parsedPart = parseInt(part, BASE);\n    if (!Number.isSafeInteger(parsedPart)) {\n      throw new RangeError(`${parsedPart} exceeds ${Number.MAX_SAFE_INTEGER}.`);\n    }\n  } else {\n    parsedPart = part;\n  }\n  return parsedPart;\n};\n\n/**\n * compare SemVer\n * @param {string} version - version string\n * @param {string} base - base version string to compare from\n * @param {boolean} [strict] - reject 'v' prefixed\n * @returns {number}\n *   - -1 or negative number, if version is less than base version\n *     0, if version is equal to base version\n *     1 or positive number, if version is greater than base version\n */\nexport const compareSemVer = (version, base, strict = false) => {\n  if (!isString(version)) {\n    throw new TypeError(`Expected String but got ${getType(version)}.`);\n  }\n  if (!isString(base)) {\n    throw new TypeError(`Expected String but got ${getType(base)}.`);\n  }\n  if (!isValidSemVer(version, !!strict)) {\n    throw new Error(`Invalid version string: ${version}`);\n  }\n  if (!isValidSemVer(base, !!strict)) {\n    throw new Error(`Invalid version string: ${base}`);\n  }\n  let result;\n  if (version === base) {\n    result = 0;\n  } else {\n    const reg = strict ? REGEXP_SEMVER_STRICT : REGEXP_SEMVER;\n    const [, vRel, vPre] = version.match(reg);\n    const [, bRel, bPre] = base.match(reg);\n    const [vMajor, vMinor, vPatch] =\n      vRel.split('.').map(part => parseVersionPart(part));\n    const [bMajor, bMinor, bPatch] =\n      bRel.split('.').map(part => parseVersionPart(part));\n    if (vMajor > bMajor) {\n      result = 1;\n    } else if (vMajor < bMajor) {\n      result = -1;\n    } else if (vMinor > bMinor) {\n      result = 1;\n    } else if (vMinor < bMinor) {\n      result = -1;\n    } else if (vPatch > bPatch) {\n      result = 1;\n    } else if (vPatch < bPatch) {\n      result = -1;\n    } else if (vPre === bPre) {\n      result = 0;\n    } else if (!vPre && bPre) {\n      result = 1;\n    } else if (vPre && !bPre) {\n      result = -1;\n    } else {\n      const vPreParts = vPre.split('.').map(part =>\n        parseVersionPart(part, true)\n      );\n      const bPreParts = bPre.split('.').map(part =>\n        parseVersionPart(part, true)\n      );\n      const l = Math.max(vPreParts.length, bPreParts.length);\n      let i = 0;\n      while (i < l) {\n        const vPart = vPreParts[i];\n        const bPart = bPreParts[i];\n        if ((vPart && !bPart) || (isString(vPart) && Number.isInteger(bPart))) {\n          result = 1;\n        } else if ((!vPart && bPart) ||\n                   (Number.isInteger(vPart) && isString(bPart))) {\n          result = -1;\n        } else if (vPart !== bPart && isString(vPart) && isString(bPart)) {\n          result = vPart.localeCompare(bPart);\n        } else if (Number.isInteger(vPart) && Number.isInteger(bPart)) {\n          if (vPart > bPart) {\n            result = 1;\n          } else if (vPart < bPart) {\n            result = -1;\n          }\n        }\n        if (Number.isInteger(result)) {\n          break;\n        }\n        i++;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * parse SemVer string\n * @param {string} version - version string\n * @param {boolean} [strict] - reject 'v' prefixed\n * @returns {SemVerObject} - result\n */\nexport const parseSemVer = (version, strict = false) => {\n  if (!isString(version)) {\n    throw new TypeError(`Expected String but got ${getType(version)}.`);\n  }\n  const matches = isValidSemVer(version, !!strict);\n  let major, minor, patch, pre, build;\n  if (matches) {\n    const reg = strict ? REGEXP_SEMVER_STRICT : REGEXP_SEMVER;\n    const [, vRel, vPre, vBuild] = version.match(reg);\n    [major, minor, patch] = vRel.split('.').map(part => parseVersionPart(part));\n    if (vPre) {\n      pre = vPre.split('.').map(part => parseVersionPart(part, true));\n    }\n    if (vBuild) {\n      build = vBuild.split('.').map(part => parseVersionPart(part, true));\n    }\n  }\n  return {\n    version, matches, major, minor, patch, pre, build\n  };\n};\n\n/* async wrappers */\n/**\n * compare SemVer (async)\n * @param {string} version - version string\n * @param {string} base - base version string to compare from\n * @param {boolean} [strict] - reject 'v' prefixed\n * @returns {Promise.<number>}\n *   - -1 or negative number, if version is less than base version\n *     0, if version is equal to base version\n *     1 or positive number, if version is greater than base version\n */\nconst compareSemVerAsync = async (version, base, strict = false) => {\n  const res = compareSemVer(version, base, strict);\n  return res;\n};\n\n/**\n * is valid SemVer string (async)\n * @param {string} version - version string\n * @param {boolean} [strict] - reject 'v' prefixed\n * @returns {Promise.<boolean>} - result\n */\nconst isValidSemVerAsync = async (version, strict = false) => {\n  const res = isValidSemVer(version, strict);\n  return res;\n};\n\n/**\n * parse SemVer string (async)\n * @param {string} version - version string\n * @param {boolean} [strict] - reject 'v' prefixed\n * @returns {Promise.<SemVerObject>} - result\n */\nconst parseSemVerAsync = async (version, strict = false) => {\n  const res = parseSemVer(version, strict);\n  return res;\n};\n\n/* export async functions */\nexport const promises = {\n  compareSemVer: compareSemVerAsync,\n  isValidSemVer: isValidSemVerAsync,\n  parseSemVer: parseSemVerAsync\n};\n","import { parseSemVer } from \"semver-parser\";\n\nimport Analytics from \"./Analytics\";\nimport { ErrorReporterInjector, getTagsForReporting } from \"./Errors\";\nimport { I18nConfig } from \"./I18nConfig\";\nimport { bindAll } from \"./Scope\";\nimport BoardStorage from \"../storage/BoardStorage\";\nimport MemberStorage from \"../storage/MemberStorage\";\nimport { Trello } from \"../types/TrelloPowerUp\";\n\n@ErrorReporterInjector\nclass VersionChecker {\n  boardStorage: BoardStorage;\n  memberStorage: MemberStorage;\n\n  constructor(boardStorage: BoardStorage, memberStorage: MemberStorage) {\n    this.boardStorage = boardStorage;\n    this.memberStorage = memberStorage;\n    bindAll(this);\n  }\n\n  async isThereANewMinorOrMajor(t: Trello.PowerUp.IFrame): Promise<boolean> {\n    const storedVersionRaw = await this.memberStorage.read<string>(\n      t,\n      MemberStorage.POWER_UP_VERSION,\n    );\n\n    if (!storedVersionRaw) {\n      return true;\n    }\n\n    const storedVersion = parseSemVer(storedVersionRaw);\n    const newVersion = parseSemVer(__BUILDTIME_VERSION__);\n\n    const isNewer =\n      newVersion.major > storedVersion.major ||\n      newVersion.minor > storedVersion.minor;\n\n    return !storedVersion || isNewer;\n  }\n\n  async showMenu(t: Trello.PowerUp.IFrame): Promise<void> {\n    const storedVersion = await this.memberStorage.read<string>(\n      t,\n      MemberStorage.POWER_UP_VERSION,\n    );\n    const title = storedVersion\n      ? t.localizeKey(\"boardButtonPopupTitle\", {\n          oldVersion: storedVersion,\n          newVersion: __BUILDTIME_VERSION__,\n        })\n      : t.localizeKey(\"boardButtonPopupTitleMissingVersion\", {\n          newVersion: __BUILDTIME_VERSION__,\n        });\n\n    return t.popup({\n      title: title,\n      url: `./release-notes.html?${await Analytics.getOverrides(this.boardStorage, t)}&${await getTagsForReporting(this.boardStorage, t)}`,\n      args: { version: __BUILDTIME_VERSION__, localization: I18nConfig },\n      callback: this.storeNewVersion,\n      height: 65,\n    });\n  }\n\n  async storeNewVersion(t: Trello.PowerUp.IFrame): Promise<void> {\n    await this.memberStorage.write(\n      t,\n      MemberStorage.POWER_UP_VERSION,\n      __BUILDTIME_VERSION__,\n    );\n  }\n}\n\nexport default VersionChecker;\n","import { ErrorReporterInjector } from \"./Errors\";\nimport { bindAll } from \"./Scope\";\nimport CardStorage from \"../storage/CardStorage\";\nimport { Trello } from \"../types/TrelloPowerUp\";\n\n@ErrorReporterInjector\nclass Voting {\n  cardStorage: CardStorage;\n\n  constructor() {\n    this.cardStorage = new CardStorage();\n    bindAll(this);\n  }\n\n  async hasCurrentMemberVoted(t: Trello.PowerUp.IFrame): Promise<boolean> {\n    const votes = await this.cardStorage.read<Votes>(t, CardStorage.VOTES);\n    if (!votes) {\n      return false;\n    }\n\n    const currentMember = t.getContext().member;\n    return !!votes[currentMember];\n  }\n\n  async getVotes(t: Trello.PowerUp.IFrame): Promise<Votes> {\n    return await this.cardStorage.read<Votes>(t, CardStorage.VOTES);\n  }\n\n  async countVotesByCard(\n    t: Trello.PowerUp.IFrame,\n    cardId: string,\n  ): Promise<number> {\n    const votes = await this.cardStorage.read<Votes>(\n      t,\n      CardStorage.VOTES,\n      cardId,\n    );\n\n    if (!votes) {\n      return 0;\n    }\n\n    return Object.keys(votes).filter((key) => votes[key]).length;\n  }\n\n  async getMaxVotes(t: Trello.PowerUp.IFrame): Promise<number> {\n    const currentList = await t.list(\"cards\");\n\n    // https://www.talcottridge.com/multi-voting-math-or-n3\n    return Math.ceil(currentList.cards.length / 3);\n  }\n\n  async canCurrentMemberVote(t: Trello.PowerUp.IFrame): Promise<boolean> {\n    if (await this.hasCurrentMemberVoted(t)) {\n      return true;\n    }\n\n    const currentList = await t.list(\"cards\");\n    const cardIds = currentList.cards.map((card) => card.id);\n    const currentMemberVotes = await this.countVotesByMember(t, cardIds);\n    const maxVotes = await this.getMaxVotes(t);\n\n    return currentMemberVotes < maxVotes;\n  }\n\n  async countVotesByMember(\n    t: Trello.PowerUp.IFrame,\n    cardIds: string[],\n  ): Promise<number> {\n    const listVotes: number[] = await Promise.all(\n      cardIds.map(async (cardId): Promise<number> => {\n        const votes = await this.cardStorage.read<Votes>(\n          t,\n          CardStorage.VOTES,\n          cardId,\n        );\n        if (!votes) {\n          return 0;\n        }\n\n        const currentMember = t.getContext().member;\n        return votes[currentMember] ? 1 : 0;\n      }),\n    );\n\n    return listVotes.reduce((total, vote): number => total + vote, 0);\n  }\n}\n\nexport default Voting;\n","import CapabilityHandlers from \"./CapabilityHandlers\";\nimport { LeanCoffeeBase, LeanCoffeeBaseParams } from \"./LeanCoffeeBase\";\nimport ElapsedCardBadge from \"./badges/ElapsedCardBadge\";\nimport ElapsedCardDetailBadge from \"./badges/ElapsedCardDetailBadge\";\nimport VotingCardBadge from \"./badges/VotingCardBadge\";\nimport VotingCardDetailBadge from \"./badges/VotingCardDetailBadge\";\nimport BoardStorage from \"./storage/BoardStorage\";\nimport CardStorage from \"./storage/CardStorage\";\nimport { Trello } from \"./types/TrelloPowerUp\";\nimport Analytics from \"./utils/Analytics\";\nimport Discussion from \"./utils/Discussion\";\nimport { getTagsForReporting, isRunningInProduction } from \"./utils/Errors\";\nimport { digestMessage } from \"./utils/Hashing\";\nimport { I18nConfig } from \"./utils/I18nConfig\";\nimport VersionChecker from \"./utils/VersionChecker\";\nimport Voting from \"./utils/Voting\";\n\nclass LeanCoffeePowerUp extends LeanCoffeeBase {\n  t: Trello.PowerUp;\n  baseUrl: string;\n  discussion: Discussion;\n  voting: Voting;\n  elapsedCardBadge: ElapsedCardBadge;\n  elapsedCardDetailBadge: ElapsedCardDetailBadge;\n  votingCardBadge: VotingCardBadge;\n  votingCardDetailBadge: VotingCardDetailBadge;\n  versionChecker: VersionChecker;\n  capabilityHandlers: CapabilityHandlers;\n\n  constructor({ w, config }: LeanCoffeeBaseParams) {\n    super({ w, config });\n    this.t = w.TrelloPowerUp;\n\n    const { hostname, port, defaultDuration } =\n      this.config[process.env.NODE_ENV as Environment];\n    this.baseUrl = `${hostname}${port ? `:${port}` : \"\"}`;\n\n    this.discussion = new Discussion(this.w, this.baseUrl, defaultDuration);\n    this.voting = new Voting();\n    this.versionChecker = new VersionChecker(\n      this.boardStorage,\n      this.memberStorage,\n    );\n\n    this.elapsedCardBadge = new ElapsedCardBadge(this.discussion);\n    this.elapsedCardDetailBadge = new ElapsedCardDetailBadge(this.discussion);\n    this.votingCardBadge = new VotingCardBadge(\n      this.w,\n      this.baseUrl,\n      this.voting,\n      this.boardStorage,\n      this.cardStorage,\n    );\n    this.votingCardDetailBadge = new VotingCardDetailBadge(\n      this.w,\n      this.baseUrl,\n      this.voting,\n      this.boardStorage,\n      this.cardStorage,\n    );\n    this.capabilityHandlers = new CapabilityHandlers(this);\n  }\n\n  async handleVoting(t: Trello.PowerUp.IFrame): Promise<void> {\n    if (!(await this.voting.canCurrentMemberVote(t))) {\n      return t.popup({\n        title: \"Leaner Coffee\",\n        url: `${this.baseUrl}/too_many_votes.html?${await Analytics.getOverrides(this.boardStorage, t)}&${await getTagsForReporting(this.boardStorage, t)}`,\n        args: {\n          maxVotes: await this.voting.getMaxVotes(t),\n          localization: I18nConfig,\n        },\n        height: 98,\n      });\n    }\n\n    const votes = (await this.voting.getVotes(t)) || {};\n    const currentMember = await t.member(\n      \"id\",\n      \"username\",\n      \"fullName\",\n      \"avatar\",\n    );\n\n    let outcome: string;\n\n    if (votes[currentMember.id]) {\n      delete votes[currentMember.id];\n      outcome = \"removed\";\n    } else {\n      votes[currentMember.id] = {\n        username: currentMember.username,\n        fullName: currentMember.fullName,\n        avatar: currentMember.avatar, // currently unused\n      };\n      outcome = \"added\";\n    }\n\n    await this.cardStorage.write(t, CardStorage.VOTES, votes);\n    await Analytics.event(this.w, \"voted\", { outcome: outcome });\n  }\n\n  async stopAndStart(t: Trello.PowerUp.IFrame): Promise<void> {\n    await Analytics.event(this.w, \"discussionStatusOverridden\");\n\n    await this.discussion.end(t);\n    await Analytics.event(this.w, \"discussionStatusChanged\", {\n      newStatus: \"stopped\",\n    });\n\n    await this.discussion.start(t);\n    await Analytics.event(this.w, \"discussionStatusChanged\", {\n      newStatus: \"started\",\n    });\n  }\n\n  async handleDiscussion(t: Trello.PowerUp.IFrame): Promise<void> {\n    if (await this.discussion.isOngoingOrPausedForAnotherCard(t)) {\n      const boardStatus = await this.boardStorage.read<DiscussionStatus>(\n        t,\n        BoardStorage.DISCUSSION_STATUS,\n      );\n      const cardId = await this.boardStorage.read<string>(\n        t,\n        BoardStorage.DISCUSSION_CARD_ID,\n      );\n\n      // https://github.com/tatablack/leaner-coffee-powerup/issues/12\n      if (await this.discussion.hasNotBeenArchived(t, cardId)) {\n        const allCards = await t.cards(\"id\", \"name\");\n        const cardBeingDiscussed = allCards.find((card) => card.id === cardId);\n\n        return t.popup({\n          callback: this.stopAndStart,\n          title: \"Leaner Coffee\",\n          url: `${this.baseUrl}/ongoing_or_paused.html?${await Analytics.getOverrides(this.boardStorage, t)}`,\n          args: {\n            currentCardBeingDiscussed: cardBeingDiscussed.name,\n            currentDiscussionStatus: boardStatus,\n            localization: I18nConfig,\n          },\n          height: 120,\n        });\n      }\n\n      console.warn(\n        `Card with id ${cardId} not found in current board, most likely archived. Cleaning up.`,\n      );\n\n      await Analytics.event(this.w, \"discussionMenuOpened\", {\n        status: \"ongoing other\",\n      });\n\n      await this.boardStorage.deleteMultiple(t, [\n        BoardStorage.DISCUSSION_STATUS,\n        BoardStorage.DISCUSSION_CARD_ID,\n        BoardStorage.DISCUSSION_STARTED_AT,\n        BoardStorage.DISCUSSION_PREVIOUS_ELAPSED,\n        BoardStorage.DISCUSSION_INTERVAL_ID,\n      ]);\n    }\n\n    let items: Trello.PowerUp.PopupOptionsItem[] = [];\n    let status: string;\n\n    switch (true) {\n      case await this.discussion.isOngoingFor(t):\n        items = [\n          {\n            text: t.localizeKey(\"pauseTimer\", { symbol: \"❙ ❙\" }), // MEDIUM VERTICAL BAR + NARROW NO-BREAK SPACE\n            callback: async (t2: Trello.PowerUp.IFrame): Promise<void> => {\n              await Analytics.event(this.w, \"discussionStatusChanged\", {\n                newStatus: \"paused\",\n              });\n              await this.discussion.pause(t2);\n              await t2.closePopup();\n              await this.discussion.cardStorage.write(\n                t2,\n                CardStorage.DISCUSSION_BUTTON_LABEL,\n                t2.localizeKey(\"pausingTimer\", { symbol: \"❙ ❙\" }), // MEDIUM VERTICAL BAR + NARROW NO-BREAK SPACE\n              );\n            },\n          },\n          {\n            text: t.localizeKey(\"endDiscussion\", { symbol: \"■\" }), // BLACK SQUARE\n            callback: async (t2: Trello.PowerUp.IFrame): Promise<void> => {\n              await Analytics.event(this.w, \"discussionStatusChanged\", {\n                newStatus: \"stopped\",\n              });\n              await this.discussion.end(t2);\n              await t2.closePopup();\n              await this.discussion.cardStorage.write(\n                t2,\n                CardStorage.DISCUSSION_BUTTON_LABEL,\n                t2.localizeKey(\"endingDiscussion\", { symbol: \"■\" }), // BLACK SQUARE\n              );\n            },\n          },\n        ];\n        status = \"ongoing\";\n        break;\n      case await this.discussion.isPausedFor(t):\n        items = [\n          {\n            text: t.localizeKey(\"resumeDiscussion\", { symbol: \"▶\" }), // BLACK RIGHT-POINTING TRIANGLE\n            callback: async (t2: Trello.PowerUp.IFrame): Promise<void> => {\n              await Analytics.event(this.w, \"discussionStatusChanged\", {\n                newStatus: \"resumed\",\n              });\n              await this.discussion.start(t2);\n              await t2.closePopup();\n              await this.discussion.cardStorage.write(\n                t2,\n                CardStorage.DISCUSSION_BUTTON_LABEL,\n                t2.localizeKey(\"resumingDiscussion\", { symbol: \"▶\" }), // BLACK RIGHT-POINTING TRIANGLE\n              );\n            },\n          },\n          {\n            text: t.localizeKey(\"endDiscussion\", { symbol: \"■\" }), // BLACK SQUARE\n            callback: async (t2: Trello.PowerUp.IFrame): Promise<void> => {\n              await Analytics.event(this.w, \"discussionStatusChanged\", {\n                newStatus: \"stopped\",\n              });\n              await this.discussion.end(t2);\n              await t2.closePopup();\n              await this.discussion.cardStorage.write(\n                t2,\n                CardStorage.DISCUSSION_BUTTON_LABEL,\n                t2.localizeKey(\"endingDiscussion\", { symbol: \"■\" }), // BLACK SQUARE\n              );\n            },\n          },\n        ];\n        status = \"paused\";\n        break;\n      default:\n        items = [\n          {\n            text: t.localizeKey(\"startTimer\", { symbol: \"▶\" }), // BLACK RIGHT-POINTING TRIANGLE\n            callback: async (t2: Trello.PowerUp.IFrame): Promise<void> => {\n              await Analytics.event(this.w, \"discussionStatusChanged\", {\n                newStatus: \"started\",\n              });\n              await this.discussion.start(t2);\n              await t2.closePopup();\n              await this.discussion.cardStorage.write(\n                t2,\n                CardStorage.DISCUSSION_BUTTON_LABEL,\n                t2.localizeKey(\"startingTimer\", { symbol: \"▶\" }), // BLACK RIGHT-POINTING TRIANGLE\n              );\n            },\n          },\n        ];\n\n        if (await this.discussion.hasEverBeenDiscussed(t)) {\n          items.push({\n            text: t.localizeKey(\"resetDiscussion\", { symbol: \"↺\" }), // ANTICLOCKWISE OPEN CIRCLE ARROW\n            callback: async (t2: Trello.PowerUp.IFrame): Promise<void> => {\n              await Analytics.event(this.w, \"discussionStatusChanged\", {\n                newStatus: \"reset\",\n              });\n              await this.discussion.reset(t2);\n              await t2.closePopup();\n              await this.discussion.cardStorage.write(\n                t2,\n                CardStorage.DISCUSSION_BUTTON_LABEL,\n                t2.localizeKey(\"resettingDiscussion\", { symbol: \"↺\" }), // ANTICLOCKWISE OPEN CIRCLE ARROW\n              );\n            },\n          });\n          status = \"discussed before\";\n        } else {\n          status = \"never discussed\";\n        }\n    }\n\n    await Analytics.event(this.w, \"discussionMenuOpened\", { status });\n\n    return t.popup({\n      title: \"Leaner Coffee\",\n      items,\n    });\n  }\n\n  async getButtonLabel(t: Trello.PowerUp.IFrame): Promise<string> {\n    let label = await this.discussion.cardStorage.read<string>(\n      t,\n      CardStorage.DISCUSSION_BUTTON_LABEL,\n    );\n\n    if (label) {\n      setTimeout(() => {\n        this.discussion.cardStorage.write(\n          t,\n          CardStorage.DISCUSSION_BUTTON_LABEL,\n          null,\n        );\n      }, 2000);\n    }\n\n    label = label || t.localizeKey(\"discussion\");\n\n    return label;\n  }\n\n  async handlePowerupEnabled(t: Trello.PowerUp.AnonymousHostHandlers) {\n    const organisation = await t.organization(\"id\");\n    const board = await t.board(\"id\");\n    const organisationIdHash = await digestMessage(organisation.id);\n    const boardIdHash = await digestMessage(board.id);\n\n    await this.boardStorage.writeMultiple(t, {\n      [BoardStorage.POWER_UP_INSTALLATION_DATE]: new Date().toISOString(),\n      [BoardStorage.ORGANISATION_HASH]: organisationIdHash,\n      [BoardStorage.BOARD_HASH]: boardIdHash,\n    });\n  }\n\n  async start(): Promise<void> {\n    const trelloPlugin = this.t.initialize(this.capabilityHandlers.getAll(), {\n      localization: I18nConfig,\n      helpfulStacks: !isRunningInProduction(),\n    });\n\n    this.discussion.init(trelloPlugin);\n\n    // There can be a race condition between the power-up starting\n    // and the on-enable event being triggered.\n    await navigator.locks.request(\n      \"powerup_init\",\n      { ifAvailable: true },\n      async (lock) => {\n        // if the lock is null, it means the on-enable handler is taking care of initialisation\n        if (lock === null) {\n          return;\n        }\n\n        if (\n          !(await this.boardStorage.read<string>(\n            trelloPlugin,\n            BoardStorage.POWER_UP_INSTALLATION_DATE,\n          ))\n        ) {\n          await this.handlePowerupEnabled(trelloPlugin);\n        }\n      },\n    );\n\n    const organisationIdHash = await this.boardStorage.read<string>(\n      trelloPlugin,\n      BoardStorage.ORGANISATION_HASH,\n    );\n    const boardIdHash = await this.boardStorage.read<string>(\n      trelloPlugin,\n      BoardStorage.BOARD_HASH,\n    );\n\n    if (window.Sentry) {\n      window.Sentry.onLoad(async () => {\n        window.Sentry.setTags({\n          organisationIdHash: organisationIdHash,\n          boardIdHash: boardIdHash,\n        });\n      });\n    }\n\n    this.w.LeanerCoffeeAnalyticsReferrer = \"https://\" + organisationIdHash;\n    this.w.LeanerCoffeeAnalyticsHostname = boardIdHash;\n    this.w.LeanerCoffeeAnalyticsBeforeSend = Analytics.beforeSend;\n\n    window.setTimeout(async () => {\n      await Analytics.pageview(this.w);\n    }, 0);\n  }\n}\n\nexport default LeanCoffeePowerUp;\n","import LeanCoffeePowerUp from \"./LeanCoffeePowerUp\";\n\ndeclare global {\n  interface Window {\n    webkitAudioContext?: typeof AudioContext;\n  }\n}\n\nconst config: Config = process.env.CONFIG as unknown as Config;\n\nconst instance = new LeanCoffeePowerUp({\n  w: window,\n  config,\n});\n\ninstance.start();\n"],"names":["addZero","value","digits","str","toString","size","length","Array","join","concat","module","exports","ms","options","leading","showMs","unsignedMs","sign","duration","getSign","t","TypeError","days","Math","trunc","hours","minutes","seconds","parseMs","output","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getTagsForReporting","async","boardStorage","read","ORGANISATION_HASH","BOARD_HASH","ErrorReporter","target","methodName","descriptor","originalMethod","isAsync","constructor","name","warningMessage","args","apply","this","error","console","warn","window","Sentry","captureException","ErrorReporterInjector","getOwnPropertyNames","filter","forEach","getOwnPropertyDescriptor","decoratedDescriptor","bindAll","classInstance","p","bind","Storage","scope","visibility","assign","canWrite","memberCanWriteToModel","isObserver","board","currentMember","member","myMembership","memberships","find","m","idMember","id","memberType","cardId","write","set","Error","contexts","WriteOperation","hasCardId","writeMultiple","entries","remove","DeleteOperation","deleteMultiple","BoardStorage","super","DISCUSSION_STATUS","DISCUSSION_CARD_ID","DISCUSSION_STARTED_AT","DISCUSSION_PREVIOUS_ELAPSED","DISCUSSION_INTERVAL_ID","POWER_UP_INSTALLATION_DATE","CardStorage","DISCUSSION_ELAPSED","DISCUSSION_THUMBS","VOTES","DISCUSSION_BUTTON_LABEL","sanitiseUrl","urlString","url","URL","protocol","hostname","port","pathname","beforeSend","event","payload","referrer","LeanerCoffeeAnalyticsReferrer","LeanerCoffeeAnalyticsHostname","pageview","eventData","umami","track","props","eventName","getOverrides","organisationIdHash","boardIdHash","encodeURIComponent","INTERVALS","supportedLocales","I18nConfig","defaultLocale","resourceUrl","CapabilityHandlers","powerUp","boardButtonsHandler","versionChecker","isThereANewMinorOrMajor","icon","dark","baseUrl","light","text","localizeKey","callback","showMenu","cardBackSection","discussion","cardStorage","title","content","type","signUrl","cardBadges","elapsedCardBadge","render","votingCardBadge","badge","cardButtons","getButtonLabel","handleDiscussion","symbol","voting","hasCurrentMemberVoted","handleVoting","cardDetailBadges","elapsedCardDetailBadge","votingCardDetailBadge","listActions","Promise","resolve","t2","list","cards","listSorters","opts","sortedCards","all","map","card","leanCoffeeVotes","countVotesByCard","sort","cardA","cardB","sortedIds","onEnable","navigator","locks","request","ifAvailable","lock","isInitialised","handlePowerupEnabled","onDisable","installationDate","installedFor","Date","now","parse","showSettings","popup","height","localization","getAll","MemberStorage","POWER_UP_VERSION","LeanCoffeeBase","w","config","memberStorage","ElapsedCardBadge","getText","elapsed","getColor","isOngoingFor","isPausedFor","getElapsed","color","VotingCardBadge","getVoters","votes","getVotes","values","reduce","knownVoters","vote","username","push","fullName","avatar","voters","hasVoted","clearVoters","totalVoters","delete","total","showVoters","items","commonData","Notifications","load","remoteAudioFile","fetch","audioData","arrayBuffer","audioBuffer","audioContext","decodeAudioData","sourceNode","createBufferSource","buffer","connect","destination","play","AudioContext","webkitAudioContext","audio","start","open","cardName","Notification","body","show","permission","requestPermission","Discussion","maxDiscussionDuration","init","getElapsedNotification","isOngoingOrPausedForAnotherCard","boardStatus","includes","getContext","hasEverBeenDiscussed","hasNotBeenArchived","updateElapsed","startedAt","saveElapsed","pause","newStatus","previousElapsed","setInterval","notify","intervalId","clearInterval","elapsedNotification","notifications","end","reset","digestMessage","message","msgUint8","TextEncoder","encode","hashBuffer","crypto","subtle","digest","from","Uint8Array","b","padStart","getType","slice","isString","String","INT","ALPHA_NUM","PRE_PART","BUILD_PART","SEMVER","REGEXP_INT","RegExp","REGEXP_SEMVER","REGEXP_SEMVER_STRICT","isValidSemVer","version","strict","test","parseVersionPart","part","nonPosInt","parsedPart","parseInt","Number","isSafeInteger","RangeError","MAX_SAFE_INTEGER","parseSemVer","matches","major","minor","patch","pre","build","reg","vRel","vPre","vBuild","match","split","VersionChecker","storedVersionRaw","storedVersion","newVersion","isNewer","oldVersion","storeNewVersion","Voting","keys","getMaxVotes","currentList","ceil","canCurrentMemberVote","cardIds","countVotesByMember","TrelloPowerUp","defaultDuration","capabilityHandlers","maxVotes","outcome","stopAndStart","cardBeingDiscussed","currentCardBeingDiscussed","currentDiscussionStatus","status","closePopup","label","setTimeout","organisation","organization","toISOString","trelloPlugin","initialize","helpfulStacks","onLoad","setTags","LeanerCoffeeAnalyticsBeforeSend"],"sourceRoot":""}
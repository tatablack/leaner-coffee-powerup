{"version":3,"file":"settings.e612c49a431fc1eb7f32.js","mappings":"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","sources":["webpack://leancoffee-powerup/./src/utils/Errors.ts","webpack://leancoffee-powerup/./src/utils/Scope.ts","webpack://leancoffee-powerup/./src/storage/Storage.ts","webpack://leancoffee-powerup/./src/storage/BoardStorage.ts","webpack://leancoffee-powerup/./src/storage/CardStorage.ts","webpack://leancoffee-powerup/./src/storage/MemberStorage.ts","webpack://leancoffee-powerup/./src/LeanCoffeeBase.ts","webpack://leancoffee-powerup/./src/utils/I18nConfig.ts","webpack://leancoffee-powerup/./src/LeanCoffeeIFrame.ts","webpack://leancoffee-powerup/./src/settings.ts","webpack://leancoffee-powerup/./src/LeanCoffeeSettings.ts"],"sourcesContent":["import BoardStorage from \"../storage/BoardStorage\";\nimport { Trello } from \"../types/TrelloPowerUp\";\n\nconst getTagsForReporting = async (\n  boardStorage: BoardStorage,\n  t: Trello.PowerUp.HostHandlers,\n): Promise<string> => {\n  const organisationIdHash = await boardStorage.read<string>(\n    t,\n    BoardStorage.ORGANISATION_HASH,\n  );\n  const boardIdHash = await boardStorage.read<string>(\n    t,\n    BoardStorage.BOARD_HASH,\n  );\n  return `organisationIdHash=${organisationIdHash}&boardIdHash=${boardIdHash}`;\n};\n\nconst isRunningInProduction = (): boolean =>\n  (process.env.NODE_ENV as Environment) === \"production\";\n\nconst ErrorReporter = (\n  target: any,\n  methodName: string,\n  descriptor: PropertyDescriptor,\n) => {\n  const originalMethod = descriptor.value;\n  const isAsync = originalMethod.constructor.name === \"AsyncFunction\";\n  const warningMessage = `Leaner Coffee Power-Up: error in ${methodName} (reported)`;\n\n  if (isAsync) {\n    descriptor.value = async function (...args: any[]) {\n      try {\n        return await originalMethod.apply(this, args);\n      } catch (error) {\n        console.warn(warningMessage);\n        window.Sentry.captureException(error);\n      }\n    };\n  } else {\n    descriptor.value = function (...args: any[]) {\n      try {\n        return originalMethod.apply(this, args);\n      } catch (error) {\n        console.warn(warningMessage);\n        window.Sentry.captureException(error);\n      }\n    };\n  }\n\n  return descriptor;\n};\n\nfunction ErrorReporterInjector<T extends { new (...args: any[]): object }>(\n  constructor: T,\n) {\n  // Get all prototype methods\n  const prototype = constructor.prototype;\n  const methodNames = Object.getOwnPropertyNames(prototype).filter(\n    (name) => typeof prototype[name] === \"function\" && name !== \"constructor\", // Skip constructor\n  );\n\n  // Apply the ErrorReporter decorator to each method\n  methodNames.forEach((methodName) => {\n    const descriptor = Object.getOwnPropertyDescriptor(prototype, methodName);\n    if (descriptor && typeof descriptor.value === \"function\") {\n      const decoratedDescriptor = ErrorReporter(\n        prototype,\n        methodName,\n        descriptor,\n      );\n\n      // console.log(\n      //   `Decorating ${constructor.name}::${methodName} with ErrorReporter`,\n      // );\n      Object.defineProperty(prototype, methodName, decoratedDescriptor);\n    }\n  });\n\n  return constructor;\n}\n\nexport {\n  getTagsForReporting,\n  isRunningInProduction,\n  ErrorReporter,\n  ErrorReporterInjector,\n};\n","const bindAll = (classInstance: any) => {\n  const p = classInstance.constructor.prototype;\n  const methodNames = Object.getOwnPropertyNames(p).filter(\n    (name) => typeof p[name] === \"function\" && name !== \"constructor\", // Skip constructor\n  );\n\n  methodNames.forEach(\n    (methodName) => (p[methodName] = p[methodName].bind(classInstance)),\n  );\n};\n\nexport { bindAll };\n","import { Trello } from \"../types/TrelloPowerUp\";\nimport { ErrorReporterInjector } from \"../utils/Errors\";\nimport { bindAll } from \"../utils/Scope\";\n\n@ErrorReporterInjector\nclass Storage {\n  scope: Trello.PowerUp.Scope;\n  visibility: Trello.PowerUp.Visibility;\n\n  constructor(\n    scope: Trello.PowerUp.Scope = \"member\",\n    visibility: Trello.PowerUp.Visibility = \"private\",\n  ) {\n    Object.assign(this, { scope, visibility });\n    bindAll(this);\n  }\n\n  canWrite(t: Trello.PowerUp.HostHandlers): boolean {\n    return this.scope === \"member\" || t.memberCanWriteToModel(this.scope);\n  }\n\n  async isObserver(t: Trello.PowerUp.AnonymousHostHandlers) {\n    const board = await t.board(\"memberships\");\n    const currentMember = await t.member(\"id\");\n    const myMembership = board.memberships.find(\n      (m) => m.idMember === currentMember.id,\n    );\n    return myMembership && myMembership.memberType === \"observer\";\n  }\n\n  read<T>(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    key: string,\n    cardId?: string,\n  ): PromiseLike<T> {\n    return t.get(cardId ?? this.scope, this.visibility, key);\n  }\n\n  async write(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    key: string,\n    value: any,\n    cardId?: string,\n  ): Promise<void> {\n    if (!(\"memberCanWriteToModel\" in t) || this.canWrite(t)) {\n      await t.set(cardId ?? this.scope, this.visibility, key, value);\n    } else {\n      window.Sentry.captureException(new Error(\"Error while editing scope\"), {\n        contexts: {\n          WriteOperation: {\n            scope: this.scope,\n            visibility: this.visibility,\n            key: key,\n            hasCardId: !!cardId,\n            isObserver: await this.isObserver(t),\n          },\n        },\n      });\n    }\n  }\n\n  async writeMultiple(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    entries: {\n      [key: string]: any;\n    },\n    cardId?: string,\n  ): Promise<void> {\n    if (!(\"memberCanWriteToModel\" in t) || this.canWrite(t)) {\n      await t.set(cardId ?? this.scope, this.visibility, entries);\n    } else {\n      window.Sentry.captureException(new Error(\"Error while editing scope\"), {\n        contexts: {\n          WriteOperation: {\n            scope: this.scope,\n            visibility: this.visibility,\n            key: entries,\n            hasCardId: !!cardId,\n            isObserver: await this.isObserver(t),\n          },\n        },\n      });\n    }\n  }\n\n  async delete(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    key: string,\n    cardId?: string,\n  ): Promise<void> {\n    if (!(\"memberCanWriteToModel\" in t) || this.canWrite(t)) {\n      return t.remove(cardId ?? this.scope, this.visibility, key);\n    } else {\n      window.Sentry.captureException(new Error(\"Error while editing scope\"), {\n        contexts: {\n          DeleteOperation: {\n            scope: this.scope,\n            visibility: this.visibility,\n            key: key,\n            hasCardId: !!cardId,\n            isObserver: await this.isObserver(t),\n          },\n        },\n      });\n    }\n  }\n\n  async deleteMultiple(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    entries: string[],\n    cardId?: string,\n  ): Promise<void> {\n    if (!(\"memberCanWriteToModel\" in t) || this.canWrite(t)) {\n      return t.remove(cardId ?? this.scope, this.visibility, entries);\n    } else {\n      window.Sentry.captureException(new Error(\"Error while editing scope\"), {\n        contexts: {\n          DeleteOperation: {\n            scope: this.scope,\n            visibility: this.visibility,\n            key: entries,\n            hasCardId: !!cardId,\n            isObserver: await this.isObserver(t),\n          },\n        },\n      });\n    }\n  }\n}\n\nexport default Storage;\n","import Storage from \"./Storage\";\n\nclass BoardStorage extends Storage {\n  static DISCUSSION_STATUS = \"leancoffeeDiscussionStatus\";\n  static DISCUSSION_CARD_ID = \"leancoffeeDiscussionCardId\";\n  static DISCUSSION_STARTED_AT = \"leancoffeeDiscussionStartedAt\";\n  static DISCUSSION_PREVIOUS_ELAPSED = \"leancoffeeDiscussionPreviousElapsed\";\n  static DISCUSSION_INTERVAL_ID = \"leancoffeeDiscussionIntervalId\";\n  static POWER_UP_INSTALLATION_DATE = \"powerUpInstallationDate\";\n  static ORGANISATION_HASH = \"organisationHash\";\n  static BOARD_HASH = \"boardHash\";\n\n  constructor() {\n    super(\"board\", \"shared\");\n  }\n}\n\nexport default BoardStorage;\n","import Storage from \"./Storage\";\n\nclass CardStorage extends Storage {\n  static DISCUSSION_STATUS = \"leancoffeeDiscussionStatus\";\n  static DISCUSSION_ELAPSED = \"leancoffeeDiscussionElapsed\";\n  static DISCUSSION_THUMBS = \"leancoffeeDiscussionThumbs\";\n  static VOTES = \"leancoffeeVotes\";\n  static DISCUSSION_BUTTON_LABEL = \"discussionButtonLabel\";\n\n  constructor() {\n    super(\"card\", \"shared\");\n  }\n}\n\nexport default CardStorage;\n","import Storage from \"./Storage\";\n\nclass MemberStorage extends Storage {\n  static POWER_UP_VERSION = \"powerUpVersion\";\n\n  constructor() {\n    super(\"member\", \"private\");\n  }\n}\n\nexport default MemberStorage;\n","import BoardStorage from \"./storage/BoardStorage\";\nimport CardStorage from \"./storage/CardStorage\";\nimport MemberStorage from \"./storage/MemberStorage\";\nimport { Trello } from \"./types/TrelloPowerUp\";\nimport { ErrorReporterInjector } from \"./utils/Errors\";\nimport { bindAll } from \"./utils/Scope\";\n\nexport interface LeanCoffeeBaseParams {\n  w: Window;\n  config: Config;\n  t?: Trello.PowerUp | Trello.PowerUp.IFrame;\n}\n\n@ErrorReporterInjector\nexport class LeanCoffeeBase {\n  w: Window;\n  boardStorage: BoardStorage;\n  cardStorage: CardStorage;\n  memberStorage: MemberStorage;\n  config: Config;\n\n  constructor({ w, config }: LeanCoffeeBaseParams) {\n    this.w = w;\n    this.config = config;\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n    this.memberStorage = new MemberStorage();\n    bindAll(this);\n  }\n}\n","import { Trello } from \"../types/TrelloPowerUp\";\n\nconst config: Config = process.env.CONFIG as unknown as Config;\nconst { supportedLocales } = config[process.env.NODE_ENV as Environment];\n\nexport const I18nConfig: Trello.PowerUp.Localization = {\n  defaultLocale: \"en\",\n  supportedLocales,\n  resourceUrl: \"/i18n/{locale}.json\",\n};\n","import { LeanCoffeeBase, LeanCoffeeBaseParams } from \"./LeanCoffeeBase\";\nimport BoardStorage from \"./storage/BoardStorage\";\nimport { Trello } from \"./types/TrelloPowerUp\";\nimport { isRunningInProduction } from \"./utils/Errors\";\nimport { I18nConfig } from \"./utils/I18nConfig\";\n\nexport class LeanCoffeeIFrame extends LeanCoffeeBase {\n  t: Trello.PowerUp.IFrame;\n\n  constructor({ w, config }: LeanCoffeeBaseParams) {\n    super({ w, config });\n\n    this.t = w.TrelloPowerUp.iframe({\n      localization: I18nConfig,\n      helpfulStacks: !isRunningInProduction(),\n    });\n\n    Promise.all([\n      this.boardStorage.read<string>(this.t, BoardStorage.ORGANISATION_HASH),\n      this.boardStorage.read<string>(this.t, BoardStorage.BOARD_HASH),\n    ]).then(([organisationIdHash, boardIdHash]) => {\n      if (this.w.Sentry) {\n        this.w.Sentry.onLoad(async () => {\n          this.w.Sentry.setTags({\n            organisationIdHash: organisationIdHash,\n            boardIdHash: boardIdHash,\n          });\n        });\n      }\n    });\n  }\n}\n","import LeanCoffeeSettings from \"./LeanCoffeeSettings\";\n\nconst config: Config = process.env.CONFIG as unknown as Config;\n\nconst settings = new LeanCoffeeSettings({\n  w: window,\n  config,\n});\nsettings.init();\n","import { LeanCoffeeIFrame } from \"./LeanCoffeeIFrame\";\nimport Debug from \"./utils/Debug\";\nimport { isRunningInProduction } from \"./utils/Errors\";\n\nclass LeanCoffeeSettings extends LeanCoffeeIFrame {\n  init(): void {\n    if (!isRunningInProduction()) {\n      (\n        this.w.document.querySelector(\".dev-only\") as HTMLElement\n      ).style.display = \"block\";\n      this.w.document\n        .getElementById(\"showData\")\n        .addEventListener(\"click\", this.showData.bind(this));\n      this.w.document\n        .getElementById(\"wipeData\")\n        .addEventListener(\"click\", this.wipeData.bind(this));\n    }\n\n    this.t.render(() => {\n      this.t.localizeNode(document.body);\n      this.t.sizeTo(\"#leanCoffeeSettingsForm\");\n    });\n  }\n\n  async showData(evt: Event): Promise<void> {\n    evt.preventDefault();\n    if (isRunningInProduction()) {\n      return;\n    }\n\n    await Debug.showData(this.t);\n  }\n\n  async wipeData(evt: Event): Promise<void> {\n    evt.preventDefault();\n    if (isRunningInProduction()) {\n      return;\n    }\n\n    await Debug.wipeData(this.t, this.cardStorage, this.boardStorage);\n  }\n}\n\nexport default LeanCoffeeSettings;\n"],"names":["ErrorReporter","target","methodName","descriptor","originalMethod","value","isAsync","constructor","name","warningMessage","async","args","apply","this","error","console","warn","window","Sentry","captureException","ErrorReporterInjector","prototype","Object","getOwnPropertyNames","filter","forEach","getOwnPropertyDescriptor","decoratedDescriptor","defineProperty","bindAll","classInstance","p","bind","Storage","scope","visibility","assign","canWrite","t","memberCanWriteToModel","isObserver","board","currentMember","member","myMembership","memberships","find","m","idMember","id","memberType","read","key","cardId","get","write","set","Error","contexts","WriteOperation","hasCardId","writeMultiple","entries","remove","DeleteOperation","deleteMultiple","super","DISCUSSION_STATUS","DISCUSSION_CARD_ID","DISCUSSION_STARTED_AT","DISCUSSION_PREVIOUS_ELAPSED","DISCUSSION_INTERVAL_ID","POWER_UP_INSTALLATION_DATE","ORGANISATION_HASH","BOARD_HASH","CardStorage","DISCUSSION_ELAPSED","DISCUSSION_THUMBS","VOTES","DISCUSSION_BUTTON_LABEL","MemberStorage","POWER_UP_VERSION","LeanCoffeeBase","w","config","boardStorage","cardStorage","memberStorage","supportedLocales","I18nConfig","defaultLocale","resourceUrl","LeanCoffeeIFrame","TrelloPowerUp","iframe","localization","helpfulStacks","Promise","all","then","organisationIdHash","boardIdHash","onLoad","setTags","init","render","localizeNode","document","body","sizeTo","showData","evt","preventDefault","wipeData"],"sourceRoot":""}
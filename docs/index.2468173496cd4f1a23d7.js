!function(){var t={262:function(t){function e(t,e){e=e||2;let s=t.toString(),a=0;return a=e-s.length+1,s=new Array(a).join("0").concat(s),s}t.exports=function(t,s){const a=s&&s.leading,i=s&&s.ms,r=t<0?-t:t,n=function(t,e){return e?t<0?"-":"":t<=-1e3?"-":""}(t,i),o=function(t){if("number"!=typeof t)throw new TypeError("Expected a number");return{days:Math.trunc(t/864e5),hours:Math.trunc(t/36e5)%24,minutes:Math.trunc(t/6e4)%60,seconds:Math.trunc(t/1e3)%60,ms:Math.trunc(t)%1e3}}(r),c=e(o.seconds);let u="";return o.days&&!u&&(u=n+o.days+":"+e(o.hours)+":"+e(o.minutes)+":"+c),o.hours&&!u&&(u=n+(a?e(o.hours):o.hours)+":"+e(o.minutes)+":"+c),u||(u=n+(a?e(o.minutes):o.minutes)+":"+c),i&&(u+="."+e(o.ms,3)),u}}},e={};function s(a){var i=e[a];if(void 0!==i)return i.exports;var r=e[a]={exports:{}};return t[a](r,r.exports,s),r.exports}s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,{a:e}),e},s.d=function(t,e){for(var a in e)s.o(e,a)&&!s.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},function(){"use strict";var t=class{constructor(t="member",e="private"){Object.assign(this,{scope:t,visibility:e})}read(t,e,s){return t.get(s??this.scope,this.visibility,e)}write(t,e,s,a){return t.set(a??this.scope,this.visibility,e,s)}writeMultiple(t,e,s){return t.set(s??this.scope,this.visibility,e)}delete(t,e,s){return t.remove(s??this.scope,this.visibility,e)}deleteMultiple(t,e,s){return t.remove(s??this.scope,this.visibility,e)}};class e extends t{constructor(){super("card","shared")}getDiscussionStatus(t){return super.read(t,e.DISCUSSION_STATUS)}getDiscussionElapsed(t){return super.read(t,e.DISCUSSION_ELAPSED)}getDiscussionThumbs(t){return super.read(t,e.DISCUSSION_THUMBS)}getDiscussionButtonLabel(t){return super.read(t,e.DISCUSSION_BUTTON_LABEL)}saveDiscussionStatus(t,s,a){return super.write(t,e.DISCUSSION_STATUS,s,a)}saveDiscussionElapsed(t,s,a){return super.write(t,e.DISCUSSION_ELAPSED,s,a)}saveDiscussionThumbs(t,s){return super.write(t,e.DISCUSSION_THUMBS,s)}saveVotes(t,s){return super.write(t,e.VOTES,s)}deleteVotes(t){return super.delete(t,e.VOTES)}saveDiscussionButtonLabel(t,s){return super.write(t,e.DISCUSSION_BUTTON_LABEL,s)}deleteDiscussionThumbs(t){return super.delete(t,e.DISCUSSION_THUMBS)}}e.DISCUSSION_STATUS="leancoffeeDiscussionStatus",e.DISCUSSION_ELAPSED="leancoffeeDiscussionElapsed",e.DISCUSSION_THUMBS="leancoffeeDiscussionThumbs",e.VOTES="leancoffeeVotes",e.DISCUSSION_BUTTON_LABEL="discussionButtonLabel";var a=e;const i=t=>{const e=new URL(t);return e.protocol+e.hostname+(e.port?`:${e.port}`:"")+e.pathname};var r={beforeSend:(t,e)=>({...e,referrer:window.LeanerCoffeeAnalyticsReferrer,hostname:window.LeanerCoffeeAnalyticsHostname,url:i(e.url)}),pageview:async(t,e={})=>{t.umami?await t.umami.track((t=>({...t,...e}))):console.warn("Umami not available for pageview",e)},event:async(t,e,s)=>{t.umami?await t.umami.track(e,s):console.warn("Umami not available for event "+e,s)},getOverrides:async(t,e)=>{const s=await t.getOrganisationIdHash(e),a=await t.getBoardIdHash(e);return`referrer=${encodeURIComponent("https://"+s)}&hostname=${a}`}};const{supportedLocales:n}={hostname:"https://leaner-coffee.tatablack.net",defaultDuration:3e5,supportedLocales:["en","it"]},o={defaultLocale:"en",supportedLocales:n,resourceUrl:"/i18n/{locale}.json"};class c extends t{constructor(){super("board","shared")}async getDiscussionStatus(t){return super.read(t,c.DISCUSSION_STATUS)}async getDiscussionCardId(t){return super.read(t,c.DISCUSSION_CARD_ID)}async getDiscussionStartedAt(t){return super.read(t,c.DISCUSSION_STARTED_AT)}async getDiscussionPreviousElapsed(t){return super.read(t,c.DISCUSSION_PREVIOUS_ELAPSED)}async getDiscussionIntervalId(t){return super.read(t,c.DISCUSSION_INTERVAL_ID)}async getPowerUpInstallationDate(t){return super.read(t,c.POWER_UP_INSTALLATION_DATE)}async getOrganisationIdHash(t){return super.read(t,c.ORGANISATION_HASH)}async setOrganisationIdHash(t,e){return super.write(t,c.ORGANISATION_HASH,e)}async getBoardIdHash(t){return super.read(t,c.BOARD_HASH)}async setBoardIdHash(t,e){return super.write(t,c.BOARD_HASH,e)}async getInitialised(t){return!!await super.read(t,c.POWER_UP_INSTALLATION_DATE)}setPowerUpInstallationDate(t,e){return super.write(t,c.POWER_UP_INSTALLATION_DATE,e)}}c.DISCUSSION_STATUS="leancoffeeDiscussionStatus",c.DISCUSSION_CARD_ID="leancoffeeDiscussionCardId",c.DISCUSSION_STARTED_AT="leancoffeeDiscussionStartedAt",c.DISCUSSION_PREVIOUS_ELAPSED="leancoffeeDiscussionPreviousElapsed",c.DISCUSSION_INTERVAL_ID="leancoffeeDiscussionIntervalId",c.POWER_UP_INSTALLATION_DATE="powerUpInstallationDate",c.ORGANISATION_HASH="organisationHash",c.BOARD_HASH="boardHash";var u=c;class d extends t{constructor(){super("member","private")}}d.POWER_UP_VERSION="powerUpVersion";var l=d;class h{constructor({w:t,config:e}){this.isRunningInProduction=()=>!0,this.w=t,this.config=e,this.boardStorage=new u,this.cardStorage=new a,this.memberStorage=new l}}var S=s(262),w=s.n(S);var g=class{constructor(t){this.getText=async(t,e)=>w()(e),this.getColor=async t=>await this.discussion.isOngoingFor(t)?"orange":await this.discussion.isPausedFor(t)?"yellow":"light-gray",this.discussion=t,this.render=this.render.bind(this)}async render(t){const e=await this.discussion.getElapsed(t);return e?{text:await this.getText(t,e),color:await this.getColor(t)}:null}};var p=class extends g{constructor(){super(...arguments),this.render=async t=>{if("ENDED"!==await this.discussion.cardStorage.getDiscussionStatus(t))return null;const e=await super.render(t);return e.title=t.localizeKey("discussionDurationTitle"),e}}};var D=class{constructor(t,e,s,a,i){this.getVoters=async t=>{const e=await this.voting.getVotes(t)||{};return Object.values(e).reduce(((t,e)=>(e.username&&t.push({text:`${e.fullName} (${e.username})`,avatar:e.avatar}),t)),[])},this.w=t,this.baseUrl=e,this.voting=s,this.boardStorage=a,this.cardStorage=i,this.render=this.render.bind(this)}async render(t){const e=await this.getVoters(t);if(!e.length)return null;const s=await this.voting.hasCurrentMemberVoted(t);return{text:e.length.toString(),color:s?"blue":null,icon:`${this.baseUrl}/assets/powerup/${s?"heart_white.svg":"heart.svg"}`}}};var I=class extends D{constructor(){super(...arguments),this.clearVoters=async t=>{const e=await this.getVoters(t);await this.cardStorage.deleteVotes(t),await r.event(this.w,"votesCleared",{total:e.length})},this.showVoters=async t=>{const e=await this.getVoters(t);e.length&&await t.popup({title:t.localizeKey("voters"),url:`./voters.html?${await r.getOverrides(this.boardStorage,t)}`,args:{items:e,localization:o},callback:this.clearVoters})},this.render=async t=>{const e=await super.render(t);return e&&(e.title=t.localizeKey("voters"),delete e.icon,e.callback=this.showVoters),e}}};var b=class{constructor(t,e){this.w=t,this.baseUrl=e}async load(t){const e=await fetch(t),s=await e.arrayBuffer(),a=await this.audioContext.decodeAudioData(s),i=this.audioContext.createBufferSource();return i.buffer=a,i.connect(this.audioContext.destination),i}async play(t){this.audioContext=this.audioContext||new(AudioContext||this.w.webkitAudioContext);(await this.load(`${this.baseUrl}/${t.audio}`)).start()}open(t,e){new Notification(e,{body:t.text,icon:`${this.baseUrl}/assets/timer.png`})}show(t,e){"Notification"in this.w&&"denied"!==Notification.permission&&("granted"===Notification.permission?this.open(t,e):Notification.requestPermission((s=>{"granted"===s&&this.open(t,e)})))}};var m=class{constructor(t,e,s){this.init=t=>{this.p=t},this.getElapsedNotification=()=>({audio:"assets/looking_down.mp3",text:this.p.localizeKey("elapsedNotification")}),this.isOngoingOrPausedForAnotherCard=async t=>{const e=await this.boardStorage.getDiscussionStatus(t),s=await this.boardStorage.getDiscussionCardId(t);return["ONGOING","PAUSED"].includes(e)&&s!==t.getContext().card},this.hasEverBeenDiscussed=async t=>void 0!==await this.cardStorage.getDiscussionStatus(t),this.hasNotBeenArchived=async(t,e)=>!!(await t.cards("id","name")).find((t=>t.id===e)),this.isOngoingFor=async t=>"ONGOING"===await this.cardStorage.getDiscussionStatus(t),this.isPausedFor=async t=>"PAUSED"===await this.cardStorage.getDiscussionStatus(t),this.getElapsed=t=>this.cardStorage.getDiscussionElapsed(t),this.updateElapsed=async t=>{const e=await this.boardStorage.getDiscussionStartedAt(t),s=Date.now()-e;await this.saveElapsed(t),s>this.maxDiscussionDuration&&(await this.pause(t,!0),await r.event(this.w,"discussionStatusChanged",{newStatus:"ended"}))},this.saveElapsed=async t=>{const e=await this.boardStorage.getDiscussionCardId(t),s=await this.boardStorage.getDiscussionStartedAt(t),a=await this.boardStorage.getDiscussionPreviousElapsed(t)||0,i=s?Date.now()-s:0;await this.cardStorage.saveDiscussionElapsed(t,i+a,e)},this.start=async t=>{await this.boardStorage.writeMultiple(t,{[u.DISCUSSION_STATUS]:"ONGOING",[u.DISCUSSION_CARD_ID]:t.getContext().card,[u.DISCUSSION_STARTED_AT]:Date.now(),[u.DISCUSSION_PREVIOUS_ELAPSED]:await this.getElapsed(t),[u.DISCUSSION_INTERVAL_ID]:setInterval(this.updateElapsed,5e3,t)}),await this.cardStorage.saveDiscussionStatus(t,"ONGOING"),await this.cardStorage.deleteDiscussionThumbs(t)},this.pause=async(t,e=!1)=>{const s=await this.boardStorage.getDiscussionIntervalId(t),a=await this.boardStorage.getDiscussionCardId(t),i=(await t.cards("id","name")).find((t=>t.id===a)).name;if(clearInterval(s),await this.cardStorage.saveDiscussionStatus(t,"PAUSED"),await this.saveElapsed(t),await this.boardStorage.writeMultiple(t,{[u.DISCUSSION_STATUS]:"PAUSED",[u.DISCUSSION_STARTED_AT]:null,[u.DISCUSSION_PREVIOUS_ELAPSED]:await this.getElapsed(t),[u.DISCUSSION_INTERVAL_ID]:null}),e){const t=this.getElapsedNotification();await this.notifications.play(t),this.notifications.show(t,i)}},this.end=async t=>{const e=await this.boardStorage.getDiscussionIntervalId(t),s=await this.boardStorage.getDiscussionCardId(t);clearInterval(e);try{await this.cardStorage.saveDiscussionStatus(t,"ENDED",s),await this.saveElapsed(t),await this.cardStorage.deleteMultiple(t,[a.DISCUSSION_THUMBS],s),await this.boardStorage.deleteMultiple(t,[u.DISCUSSION_STATUS,u.DISCUSSION_CARD_ID,u.DISCUSSION_STARTED_AT,u.DISCUSSION_PREVIOUS_ELAPSED,u.DISCUSSION_INTERVAL_ID])}catch(t){throw new Error(t instanceof Error&&t.message?t.message:"Error while ending a discussion")}},this.reset=async t=>{await this.hasEverBeenDiscussed(t)&&await this.cardStorage.deleteMultiple(t,[a.DISCUSSION_STATUS,a.DISCUSSION_ELAPSED,a.DISCUSSION_THUMBS],t.getContext().card)},this.w=t,this.baseUrl=e,this.notifications=new b(this.w,this.baseUrl),this.maxDiscussionDuration=s,this.boardStorage=new u,this.cardStorage=new a}};async function v(t){const e=(new TextEncoder).encode(t),s=await window.crypto.subtle.digest("SHA-256",e);return Array.from(new Uint8Array(s)).map((t=>t.toString(16).padStart(2,"0"))).join("")}const y=t=>Object.prototype.toString.call(t).slice(8,-1),f=t=>"string"==typeof t||t instanceof String,O="0|[1-9]\\d*",C="\\d*[A-Z-][A-Z\\d-]*",E=`(?:${C}|${O})`,U=`(?:${C}|\\d+)`,_=`((?:${O})(?:\\.(?:${O})){2})(?:-(${`${E}(?:\\.${E})*`}))?(?:\\+(${`${U}(?:\\.${U})*`}))?`,A=new RegExp(`^(?:${O})$`),N=new RegExp(`^v?${_}$`,"i"),T=new RegExp(`^${_}$`,"i"),V=(t,e=!1)=>{if(!f(t))throw new TypeError(`Expected String but got ${y(t)}.`);return(e?T:N).test(t)},P=(t,e=!1)=>{if(!f(t))throw new TypeError(`Expected String but got ${y(t)}.`);if(!e&&!A.test(t))throw new Error(`${t} is not a stringified positive integer.`);let s;if(A.test(t)){if(s=parseInt(t,10),!Number.isSafeInteger(s))throw new RangeError(`${s} exceeds ${Number.MAX_SAFE_INTEGER}.`)}else s=t;return s},L=(t,e=!1)=>{if(!f(t))throw new TypeError(`Expected String but got ${y(t)}.`);const s=V(t,!!e);let a,i,r,n,o;if(s){const s=e?T:N,[,c,u,d]=t.match(s);[a,i,r]=c.split(".").map((t=>P(t))),u&&(n=u.split(".").map((t=>P(t,!0)))),d&&(o=d.split(".").map((t=>P(t,!0))))}return{version:t,matches:s,major:a,minor:i,patch:r,pre:n,build:o}};var B=class{constructor(t,e){this.isThereANewMinorOrMajor=async t=>{const e=await this.memberStorage.read(t,l.POWER_UP_VERSION);if(!e)return!0;const s=L(e),a=L("0.9.2"),i=a.major>s.major||a.minor>s.minor;return!s||i},this.showMenu=async t=>{const e=await this.memberStorage.read(t,l.POWER_UP_VERSION),s=e?t.localizeKey("boardButtonPopupTitle",{oldVersion:e,newVersion:"0.9.2"}):t.localizeKey("boardButtonPopupTitleMissingVersion",{newVersion:"0.9.2"});return t.popup({title:s,url:`./release-notes.html?${await r.getOverrides(this.boardStorage,t)}`,args:{version:"0.9.2",localization:o},callback:this.storeNewVersion,height:65})},this.storeNewVersion=async t=>{await this.memberStorage.write(t,l.POWER_UP_VERSION,"0.9.2")},this.boardStorage=t,this.memberStorage=e}};var x=class{constructor(){this.hasCurrentMemberVoted=async t=>{const e=await this.cardStorage.read(t,a.VOTES);if(!e)return!1;return!!e[t.getContext().member]},this.getVotes=async t=>this.cardStorage.read(t,a.VOTES),this.countVotesByCard=async(t,e)=>{const s=await this.cardStorage.read(t,a.VOTES,e);return s?Object.keys(s).filter((t=>s[t])).length:0},this.getMaxVotes=async t=>{const e=await t.list("cards");return Math.ceil(e.cards.length/3)},this.canCurrentMemberVote=async t=>{if(await this.hasCurrentMemberVoted(t))return!0;const e=(await t.list("cards")).cards.map((t=>t.id));return await this.countVotesByMember(t,e)<await this.getMaxVotes(t)},this.countVotesByMember=async(t,e)=>(await Promise.all(e.map((async e=>{const s=await this.cardStorage.read(t,a.VOTES,e);if(!s)return 0;return s[t.getContext().member]?1:0})))).reduce(((t,e)=>t+e),0),this.cardStorage=new a}};var R=class extends h{constructor({w:t,config:e}){super({w:t,config:e}),this.handleVoting=async t=>{if(!await this.voting.canCurrentMemberVote(t))return t.popup({title:"Leaner Coffee",url:`${this.baseUrl}/too_many_votes.html?${await r.getOverrides(this.boardStorage,t)}`,args:{maxVotes:await this.voting.getMaxVotes(t),localization:o},height:98});const e=await this.voting.getVotes(t)||{},s=await t.member("id","username","fullName","avatar");let a;e[s.id]?(delete e[s.id],a="removed"):(e[s.id]={username:s.username,fullName:s.fullName,avatar:s.avatar},a="added"),await this.cardStorage.saveVotes(t,e),await r.event(this.w,"voted",{outcome:a})},this.stopAndStart=async t=>{await r.event(this.w,"discussionStatusOverridden"),await this.discussion.end(t),await r.event(this.w,"discussionStatusChanged",{newStatus:"stopped"}),await this.discussion.start(t),await r.event(this.w,"discussionStatusChanged",{newStatus:"started"})},this.handleDiscussion=async t=>{if(await this.discussion.isOngoingOrPausedForAnotherCard(t)){const e=await this.boardStorage.getDiscussionStatus(t),s=await this.boardStorage.getDiscussionCardId(t);if(await this.discussion.hasNotBeenArchived(t,s)){const a=(await t.cards("id","name")).find((t=>t.id===s));return t.popup({callback:this.stopAndStart,title:"Leaner Coffee",url:`${this.baseUrl}/ongoing_or_paused.html?${await r.getOverrides(this.boardStorage,t)}`,args:{currentCardBeingDiscussed:a.name,currentDiscussionStatus:e,localization:o},height:120})}console.warn(`Card with id ${s} not found in current board, most likely archived. Cleaning up.`),await r.event(this.w,"discussionMenuOpened",{status:"ongoing other"}),await this.boardStorage.deleteMultiple(t,[u.DISCUSSION_STATUS,u.DISCUSSION_CARD_ID,u.DISCUSSION_STARTED_AT,u.DISCUSSION_PREVIOUS_ELAPSED,u.DISCUSSION_INTERVAL_ID])}let e,s=[];switch(!0){case await this.discussion.isOngoingFor(t):s=[{text:t.localizeKey("pauseTimer",{symbol:"❙ ❙"}),callback:async t=>{await r.event(this.w,"discussionStatusChanged",{newStatus:"paused"}),await this.discussion.pause(t),await t.closePopup(),await this.discussion.cardStorage.saveDiscussionButtonLabel(t,t.localizeKey("pausingTimer",{symbol:"❙ ❙"}))}},{text:t.localizeKey("endDiscussion",{symbol:"■"}),callback:async t=>{await r.event(this.w,"discussionStatusChanged",{newStatus:"stopped"}),await this.discussion.end(t),await t.closePopup(),await this.discussion.cardStorage.saveDiscussionButtonLabel(t,t.localizeKey("endingDiscussion",{symbol:"■"}))}}],e="ongoing";break;case await this.discussion.isPausedFor(t):s=[{text:t.localizeKey("resumeDiscussion",{symbol:"▶"}),callback:async t=>{await r.event(this.w,"discussionStatusChanged",{newStatus:"resumed"}),await this.discussion.start(t),await t.closePopup(),await this.discussion.cardStorage.saveDiscussionButtonLabel(t,t.localizeKey("resumingDiscussion",{symbol:"▶"}))}},{text:t.localizeKey("endDiscussion",{symbol:"■"}),callback:async t=>{await r.event(this.w,"discussionStatusChanged",{newStatus:"stopped"}),await this.discussion.end(t),await t.closePopup(),await this.discussion.cardStorage.saveDiscussionButtonLabel(t,t.localizeKey("endingDiscussion",{symbol:"■"}))}}],e="paused";break;default:s=[{text:t.localizeKey("startTimer",{symbol:"▶"}),callback:async t=>{await r.event(this.w,"discussionStatusChanged",{newStatus:"started"}),await this.discussion.start(t),await t.closePopup(),await this.discussion.cardStorage.saveDiscussionButtonLabel(t,t.localizeKey("startingTimer",{symbol:"▶"}))}}],await this.discussion.hasEverBeenDiscussed(t)?(s.push({text:t.localizeKey("resetDiscussion",{symbol:"↺"}),callback:async t=>{await r.event(this.w,"discussionStatusChanged",{newStatus:"reset"}),await this.discussion.reset(t),await t.closePopup(),await this.discussion.cardStorage.saveDiscussionButtonLabel(t,t.localizeKey("resettingDiscussion",{symbol:"↺"}))}}),e="discussed before"):e="never discussed"}return await r.event(this.w,"discussionMenuOpened",{status:e}),t.popup({title:"Leaner Coffee",items:s})},this.getButtonLabel=async t=>{let e=await this.discussion.cardStorage.getDiscussionButtonLabel(t);return e&&setTimeout((()=>{this.discussion.cardStorage.saveDiscussionButtonLabel(t)}),2e3),e=e||t.localizeKey("discussion"),e},this.handlePowerupEnabled=async t=>{const e=await t.organization("id"),s=await t.board("id"),a=await v(e.id),i=await v(s.id);await this.boardStorage.writeMultiple(t,{[u.POWER_UP_INSTALLATION_DATE]:(new Date).toISOString(),[u.ORGANISATION_HASH]:a,[u.BOARD_HASH]:i})},this.t=t.TrelloPowerUp;const{hostname:s,port:a,defaultDuration:i}=this.config.production;this.baseUrl=`${s}${a?`:${a}`:""}`,this.discussion=new m(this.w,this.baseUrl,i),this.voting=new x,this.versionChecker=new B(this.boardStorage,this.memberStorage),this.elapsedCardBadge=new g(this.discussion),this.elapsedCardDetailBadge=new p(this.discussion),this.votingCardBadge=new D(this.w,this.baseUrl,this.voting,this.boardStorage,this.cardStorage),this.votingCardDetailBadge=new I(this.w,this.baseUrl,this.voting,this.boardStorage,this.cardStorage)}async start(){const t=this.t.initialize((e=this,{"board-buttons":async t=>await e.versionChecker.isThereANewMinorOrMajor(t)?[{icon:{dark:`${e.baseUrl}/assets/moka_white.svg`,light:`${e.baseUrl}/assets/moka.svg`},text:t.localizeKey("boardButtonLabel"),callback:e.versionChecker.showMenu}]:[],"card-back-section":async t=>void 0===await e.discussion.cardStorage.getDiscussionStatus(t)?null:{title:t.localizeKey("discussion"),icon:`${e.baseUrl}/assets/powerup/timer.svg`,content:{type:"iframe",url:t.signUrl(`${e.baseUrl}/discussion-ui.html?${await r.getOverrides(e.boardStorage,t)}`)}},"card-badges":async t=>[await e.elapsedCardBadge.render(t),await e.votingCardBadge.render(t)].filter((t=>t)),"card-buttons":async t=>[{icon:`${e.baseUrl}/assets/powerup/timer.svg`,text:await e.getButtonLabel(t),callback:e.handleDiscussion},{icon:`${e.baseUrl}/assets/powerup/heart.svg`,text:t.localizeKey("vote",{symbol:await e.voting.hasCurrentMemberVoted(t)?"☑":"☐"}),callback:e.handleVoting}],"card-detail-badges":async t=>[await e.elapsedCardDetailBadge.render(t),await e.votingCardDetailBadge.render(t)].filter((t=>t)),"list-actions":t=>Promise.resolve([{text:t.localizeKey("clearVotesFromList"),callback:async t=>{(await t.list("cards")).cards.forEach((({id:s})=>{e.cardStorage.deleteMultiple(t,[a.VOTES],s)})),await r.event(window,"listVotesCleared")}}]),"list-sorters":t=>Promise.resolve([{text:t.localizeKey("sortByVote"),callback:async(t,s)=>{const a=(await Promise.all(s.cards.map((async s=>({leanCoffeeVotes:await e.voting.countVotesByCard(t,s.id),id:s.id}))))).sort(((t,e)=>t.leanCoffeeVotes<e.leanCoffeeVotes?1:e.leanCoffeeVotes<t.leanCoffeeVotes?-1:0));return await r.event(window,"listVotesSorted"),{sortedIds:a.map((t=>t.id))}}}]),"on-enable":async t=>{await navigator.locks.request("powerup_init",{ifAvailable:!0},(async s=>{const a=await e.boardStorage.getInitialised(t);null===s||a||a||await e.handlePowerupEnabled(t)})),await r.event(window,"enabled")},"on-disable":async()=>{await r.event(window,"disabled")},"show-settings":async t=>t.popup({title:"Leaner Coffee 0.9.2",url:`${e.baseUrl}/settings.html?${await r.getOverrides(e.boardStorage,t)}`,height:184,args:{localization:o}})}),{localization:o,helpfulStacks:!this.isRunningInProduction()});var e;this.discussion.init(t),await navigator.locks.request("powerup_init",{ifAvailable:!0},(async e=>{null!==e&&(await this.boardStorage.getInitialised(t)||await this.handlePowerupEnabled(t))}));const s=await this.boardStorage.getOrganisationIdHash(t),i=await this.boardStorage.getBoardIdHash(t);this.w.LeanerCoffeeAnalyticsReferrer="https://"+s,this.w.LeanerCoffeeAnalyticsHostname=i,this.w.LeanerCoffeeAnalyticsBeforeSend=r.beforeSend,setTimeout((async()=>{await r.pageview(this.w)}),0)}};new R({w:window,config:{production:{hostname:"https://leaner-coffee.tatablack.net",defaultDuration:3e5,supportedLocales:["en","it"]}}}).start()}()}();
//# sourceMappingURL=index.2468173496cd4f1a23d7.js.map
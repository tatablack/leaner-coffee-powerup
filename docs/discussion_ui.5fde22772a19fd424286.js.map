{"version":3,"file":"discussion_ui.5fde22772a19fd424286.js","mappings":"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","sources":["webpack://leancoffee-powerup/./node_modules/format-duration/format-duration.js","webpack://leancoffee-powerup/webpack/bootstrap","webpack://leancoffee-powerup/webpack/runtime/compat get default export","webpack://leancoffee-powerup/webpack/runtime/define property getters","webpack://leancoffee-powerup/webpack/runtime/hasOwnProperty shorthand","webpack://leancoffee-powerup/./src/storage/Storage.ts","webpack://leancoffee-powerup/./src/storage/BoardStorage.ts","webpack://leancoffee-powerup/./src/storage/CardStorage.ts","webpack://leancoffee-powerup/./src/LeanCoffeeBase.ts","webpack://leancoffee-powerup/./src/utils/I18nConfig.ts","webpack://leancoffee-powerup/./src/LeanCoffeeDiscussionUI.ts","webpack://leancoffee-powerup/./src/discussion-ui.ts"],"sourcesContent":["// adapted from https://github.com/sindresorhus/parse-ms.\n// moved to internal function because parse-ms is now pure ESM.\nfunction parseMs (ms) {\n  if (typeof ms !== 'number') {\n    throw new TypeError('Expected a number')\n  }\n\n  return {\n    days: Math.trunc(ms / 86400000),\n    hours: Math.trunc(ms / 3600000) % 24,\n    minutes: Math.trunc(ms / 60000) % 60,\n    seconds: Math.trunc(ms / 1000) % 60,\n    ms: Math.trunc(ms) % 1000\n  }\n}\n\n// adapted from https://github.com/rafaelrinaldi/add-zero.\n// moved to internal function b/c addZero is unmaintained (7+ years).\n// stripped out negative sign logic since we're already doing it elsewhere.\nfunction addZero (value, digits) {\n  digits = digits || 2\n\n  let str = value.toString()\n  let size = 0\n\n  size = digits - str.length + 1\n  str = new Array(size).join('0').concat(str)\n\n  return str\n}\n\nfunction getSign (duration, showMs) {\n  if (showMs) return duration < 0 ? '-' : ''\n  return duration <= -1000 ? '-' : ''\n}\n\n/**\n * Convert a number in milliseconds to a standard duration string.\n * @param {number} ms - duration in milliseconds\n * @param {object} options - formatDuration options object\n * @param {boolean} [options.leading=false] - add leading zero\n * @param {boolean} [options.milliseconds=false] - add milliseconds\n * @returns string - formatted duration string\n */\nfunction formatDuration (ms, options) {\n  const leading = options && options.leading\n  const showMs = options && options.ms\n  const unsignedMs = ms < 0 ? -ms : ms\n  const sign = getSign(ms, showMs)\n  const t = parseMs(unsignedMs)\n  const seconds = addZero(t.seconds)\n  let output = ''\n\n  if (t.days && !output) output = sign + t.days + ':' + addZero(t.hours) + ':' + addZero(t.minutes) + ':' + seconds\n  if (t.hours && !output) output = sign + (leading ? addZero(t.hours) : t.hours) + ':' + addZero(t.minutes) + ':' + seconds\n  if (!output) output = sign + (leading ? addZero(t.minutes) : t.minutes) + ':' + seconds\n\n  if (showMs) output += '.' + addZero(t.ms, 3)\n  return output\n}\n\nmodule.exports = formatDuration\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","import { Trello } from '../types/TrelloPowerUp';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass Storage {\n  scope: Trello.PowerUp.Scope;\n  visibility: Trello.PowerUp.Visibility;\n\n  constructor(scope: Trello.PowerUp.Scope = 'member', visibility: Trello.PowerUp.Visibility = 'private') {\n    Object.assign(this, { scope, visibility });\n  }\n\n  read(t: Trello.PowerUp.IFrame, key: string, cardId?: string): PromiseLike<any> {\n    return t.get(cardId ?? this.scope, this.visibility, key);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  write(t: Trello.PowerUp.IFrame, key: string, value: any, cardId?: string): PromiseLike<void> {\n    return t.set(cardId ?? this.scope, this.visibility, key, value);\n  }\n\n  writeMultiple(t: Trello.PowerUp.IFrame, entries: {\n    [ key: string]: any;\n  }, cardId?: string): PromiseLike<void> {\n    return t.set(cardId ?? this.scope, this.visibility, entries);\n  }\n\n  delete(t: Trello.PowerUp.IFrame, key: string, cardId?: string): PromiseLike<void> {\n    return t.remove(cardId ?? this.scope, this.visibility, key);\n  }\n\n  deleteMultiple(t: Trello.PowerUp.IFrame, entries: string[], cardId?: string): PromiseLike<void> {\n    return t.remove(cardId ?? this.scope, this.visibility, entries);\n  }\n}\n\nexport default Storage;\n","import { Trello } from '../types/TrelloPowerUp';\nimport Storage from './Storage';\n\nclass BoardStorage extends Storage {\n    static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n    static DISCUSSION_CARD_ID = 'leancoffeeDiscussionCardId';\n    static DISCUSSION_STARTED_AT = 'leancoffeeDiscussionStartedAt';\n    static DISCUSSION_PREVIOUS_ELAPSED = 'leancoffeeDiscussionPreviousElapsed';\n    static DISCUSSION_INTERVAL_ID = 'leancoffeeDiscussionIntervalId';\n    static POWER_UP_VERSION = 'powerUpVersion';\n\n    constructor() {\n      super('board', 'shared');\n    }\n\n    async getDiscussionStatus(t: Trello.PowerUp.IFrame): Promise<DiscussionStatus> {\n      return super.read(t, BoardStorage.DISCUSSION_STATUS);\n    }\n\n    async getDiscussionCardId(t: Trello.PowerUp.IFrame): Promise<string> {\n      return super.read(t, BoardStorage.DISCUSSION_CARD_ID);\n    }\n\n    async getDiscussionStartedAt(t: Trello.PowerUp.IFrame): Promise<DiscussionStartedAt> {\n      return super.read(t, BoardStorage.DISCUSSION_STARTED_AT);\n    }\n\n    async getDiscussionPreviousElapsed(t: Trello.PowerUp.IFrame): Promise<DiscussionPreviousElapsed> {\n      return super.read(t, BoardStorage.DISCUSSION_PREVIOUS_ELAPSED);\n    }\n\n    async getDiscussionIntervalId(t: Trello.PowerUp.IFrame): Promise<DiscussionIntervalId> {\n      return super.read(t, BoardStorage.DISCUSSION_INTERVAL_ID);\n    }\n\n    async getPowerUpVersion(t: Trello.PowerUp.IFrame): Promise<string> {\n      return super.read(t, BoardStorage.POWER_UP_VERSION);\n    }\n\n    setPowerUpVersion(t: Trello.PowerUp.IFrame, version: string): PromiseLike<void> {\n      return super.write(t, BoardStorage.POWER_UP_VERSION, version);\n    }\n}\n\nexport default BoardStorage;\n","import { Trello } from '../types/TrelloPowerUp';\nimport Storage from './Storage';\n\nclass CardStorage extends Storage {\n  static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n  static DISCUSSION_ELAPSED = 'leancoffeeDiscussionElapsed';\n  static DISCUSSION_THUMBS = 'leancoffeeDiscussionThumbs';\n  static VOTES = 'leancoffeeVotes';\n  static DISCUSSION_BUTTON_LABEL = 'discussionButtonLabel';\n\n  constructor() {\n    super('card', 'shared');\n  }\n\n  getDiscussionStatus(t: Trello.PowerUp.IFrame): PromiseLike<DiscussionStatus> {\n    return super.read(t, CardStorage.DISCUSSION_STATUS);\n  }\n\n  getDiscussionElapsed(t: Trello.PowerUp.IFrame): PromiseLike<number> {\n    return super.read(t, CardStorage.DISCUSSION_ELAPSED);\n  }\n\n  getDiscussionThumbs(t: Trello.PowerUp.IFrame): PromiseLike<Thumbs> {\n    return super.read(t, CardStorage.DISCUSSION_THUMBS);\n  }\n\n  getDiscussionButtonLabel(t: Trello.PowerUp.IFrame): PromiseLike<string> {\n    return super.read(t, CardStorage.DISCUSSION_BUTTON_LABEL);\n  }\n\n  saveDiscussionStatus(t: Trello.PowerUp.IFrame, newStatus: DiscussionStatus, cardId?: string): PromiseLike<void> {\n    return super.write(t, CardStorage.DISCUSSION_STATUS, newStatus, cardId);\n  }\n\n  saveDiscussionElapsed(t: Trello.PowerUp.IFrame, newElapsed: number, cardId?: string): PromiseLike<void> {\n    return super.write(t, CardStorage.DISCUSSION_ELAPSED, newElapsed, cardId);\n  }\n\n  saveDiscussionThumbs(t: Trello.PowerUp.IFrame, newThumbs: Thumbs): PromiseLike<void> {\n    return super.write(t, CardStorage.DISCUSSION_THUMBS, newThumbs);\n  }\n\n  saveVotes(t: Trello.PowerUp.IFrame, newVotes: Votes): PromiseLike<void> {\n    return super.write(t, CardStorage.VOTES, newVotes);\n  }\n\n  deleteVotes(t: Trello.PowerUp.IFrame): PromiseLike<void> {\n    return super.delete(t, CardStorage.VOTES);\n  }\n\n  saveDiscussionButtonLabel(t: Trello.PowerUp.IFrame, newLabel?: string): PromiseLike<void> {\n    return super.write(t, CardStorage.DISCUSSION_BUTTON_LABEL, newLabel);\n  }\n\n  deleteDiscussionThumbs(t: Trello.PowerUp.IFrame): PromiseLike<void> {\n    return super.delete(t, CardStorage.DISCUSSION_THUMBS);\n  }\n}\n\nexport default CardStorage;\n","import { Trello } from './types/TrelloPowerUp';\nimport BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\n\nexport interface LeanCoffeeBaseParams {\n  w: Window;\n  config: Config;\n  t?: Trello.PowerUp | Trello.PowerUp.IFrame;\n}\n\nexport class LeanCoffeeBase {\n  w: Window;\n  boardStorage: BoardStorage;\n  cardStorage: CardStorage;\n  config: Config;\n\n  constructor({ w, config }: LeanCoffeeBaseParams) {\n    this.w = w;\n    this.config = config;\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n  }\n\n  isRunningInProduction = (): boolean => (process.env.NODE_ENV as Environment) === 'production';\n}\n","import { Trello } from '../types/TrelloPowerUp';\n\nconst config: Config = process.env.CONFIG as unknown as Config;\nconst { supportedLocales } = config[process.env.NODE_ENV as Environment];\n\nexport const I18nConfig: Trello.PowerUp.Localization = {\n  defaultLocale: 'en',\n  supportedLocales,\n  resourceUrl: '/i18n/{locale}.json'\n};\n","import formatDuration from 'format-duration';\nimport { Trello } from './types/TrelloPowerUp';\n\nimport { LeanCoffeeBase, LeanCoffeeBaseParams } from './LeanCoffeeBase';\nimport { I18nConfig } from './utils/I18nConfig';\n\nenum ThumbDirection {\n  'UP' = 'UP',\n  'DOWN' = 'DOWN',\n  'MIDDLE' = 'MIDDLE'\n}\n\nclass LeanCoffeeDiscussionUI extends LeanCoffeeBase {\n  t: Trello.PowerUp.IFrame;\n  badges: HTMLElement;\n  badgeElapsed: HTMLElement;\n  badgeHeaderStatus: HTMLElement;\n  badgeHeaderWhatNext: HTMLElement;\n  messageNone: HTMLElement;\n  messageEnded: HTMLElement;\n  voting: NodeListOf<HTMLElement>;\n  intervalId: number;\n  previousStatus: DiscussionStatus;\n\n  constructor({ w, config }: LeanCoffeeBaseParams) {\n    super({ w, config });\n    this.t = w.TrelloPowerUp.iframe({ localization: I18nConfig, helpfulStacks: !this.isRunningInProduction() });\n\n    this.badges = this.w.document.querySelector('.badges');\n    this.badgeElapsed = this.w.document.querySelector('.badge-elapsed');\n    this.badgeHeaderStatus = this.w.document.querySelector('[data-i18n-id=\"discussionUiStatus\"]');\n    this.badgeHeaderWhatNext = this.w.document.querySelector('[data-i18n-id=\"discussionUiWhatNext\"]');\n    this.messageNone = this.w.document.querySelector('[data-i18n-id=\"discussionUiMessageNone\"]');\n    this.messageEnded = this.w.document.querySelector('[data-i18n-id=\"discussionUiMessageEnded\"]');\n    this.voting = this.w.document.querySelectorAll('.voting');\n  }\n\n  init(): void {\n    this.w.document.querySelector('.voting-up').addEventListener(\n      'click', () => this.handleThumbs('UP')\n    );\n    this.w.document.querySelector('.voting-middle').addEventListener(\n      'click', () => this.handleThumbs('MIDDLE')\n    );\n    this.w.document.querySelector('.voting-down').addEventListener(\n      'click', () => this.handleThumbs('DOWN')\n    );\n\n    this.t.render(() => {\n      this.t.localizeNode(document.body);\n      this.w.setTimeout(() => this.t.sizeTo.call(this.t, 'body'), 100);\n      this.monitorDiscussion();\n      this.w.clearInterval(this.intervalId);\n      this.intervalId = this.w.setInterval(this.monitorDiscussion, 1000);\n    });\n  }\n\n  monitorDiscussion = async (): Promise<void> => {\n    const discussionStatus = await this.cardStorage.getDiscussionStatus(this.t);\n    const isOngoingOrPausedForThisCard = ['ONGOING', 'PAUSED'].includes(discussionStatus);\n\n    if (!!discussionStatus && this.previousStatus === discussionStatus && !isOngoingOrPausedForThisCard) {\n      return;\n    }\n\n    switch (discussionStatus) {\n      case 'ENDED': {\n        // when discussion ends, hide badge and display message\n        this.toggleBadges(false);\n        this.toggleFields('.message', 'discussionUiMessageEnded');\n        break;\n      } case 'ONGOING': {\n        // when discussion is ongoing, update badge (display ongoing and 1-sec res timer)\n        if (this.previousStatus !== discussionStatus) {\n          this.toggleVoting(false);\n          this.toggleBadges(true);\n          this.toggleFields('.message', '');\n\n          this.updateStatusHeader('ONGOING');\n        }\n\n        this.updateElapsed('ONGOING');\n        break;\n      } case 'PAUSED': {\n        // when discussion is paused, update badge (display elapsed and three buttons to deal with discussion)\n        if (this.previousStatus !== discussionStatus) {\n          this.toggleFields('.message', '');\n          this.toggleVoting(true);\n          this.toggleBadges(true);\n          this.updateStatusHeader('PAUSED');\n          this.updateElapsed('PAUSED');\n        }\n\n        this.updateThumbs();\n        break;\n      } default:\n        this.toggleBadges(false);\n        this.toggleVoting(false);\n        this.toggleFields('.message', 'discussionUiMessageNone');\n        break;\n    }\n\n    this.previousStatus = discussionStatus;\n  };\n\n  updateElapsed = async (status: DiscussionStatus): Promise<void> => {\n    if (status === 'ONGOING') {\n      const startedAt = await this.boardStorage.getDiscussionStartedAt(this.t);\n      const previousElapsed = await this.boardStorage.getDiscussionPreviousElapsed(this.t) || 0;\n      const elapsed = startedAt ? Date.now() - startedAt : 0;\n      const formattedTotalElapsed = formatDuration(elapsed + previousElapsed);\n\n      this.badgeElapsed.classList.add(status.toLowerCase());\n      this.badgeElapsed.classList.remove('paused');\n      this.badgeElapsed.textContent = `${this.t.localizeKey('discussionOngoing')} → ${formattedTotalElapsed}`;\n    } else {\n      const elapsed = await this.cardStorage.getDiscussionElapsed(this.t);\n\n      this.badgeElapsed.classList.add(status.toLowerCase());\n      this.badgeElapsed.classList.remove('ongoing');\n      this.badgeElapsed.textContent = `${this.t.localizeKey('discussionElapsed')} → ${formatDuration(elapsed)}`;\n    }\n  };\n\n  updateThumbs = async (): Promise<void> => {\n    const savedThumbs = await this.cardStorage.getDiscussionThumbs(this.t) || {};\n    const currentMember = this.t.getContext().member;\n    const currentMemberThumb = savedThumbs[currentMember];\n\n    Object.keys(ThumbDirection).forEach((thumbType) => {\n      const countByThumbType = Object.keys(savedThumbs).filter(\n        (memberId) => savedThumbs[memberId] === thumbType\n      ).length;\n\n      const thumbsBadge = this.w.document.querySelector(`.voting-${thumbType.toLowerCase()}`) as HTMLElement;\n      thumbsBadge.innerText = countByThumbType.toString();\n\n      if (thumbType === currentMemberThumb) {\n        thumbsBadge.classList.add('own');\n      } else {\n        thumbsBadge.classList.remove('own');\n      }\n    });\n  };\n\n  handleThumbs = async (thumb: Thumb): Promise<void> => {\n    const thumbs = await this.cardStorage.getDiscussionThumbs(this.t) || {};\n    const currentMember = this.t.getContext().member;\n\n    if (thumbs[currentMember] === thumb) {\n      delete thumbs[currentMember];\n    } else {\n      thumbs[currentMember] = thumb;\n    }\n\n    return this.cardStorage.saveDiscussionThumbs(this.t, thumbs);\n  };\n\n  toggleBadges = (visible: boolean): void => {\n    this.badges.style.display = visible ? 'grid' : 'none';\n  };\n\n  toggleVoting = (visible: boolean): void => {\n    this.voting.forEach((element) => {\n      element.style.visibility = visible ? 'visible' : 'hidden';\n    });\n  };\n\n  updateStatusHeader = (status: DiscussionStatus): void => {\n    if (status === 'PAUSED') {\n      this.toggleFields('.badge-header-text', 'discussionUiWhatNext');\n    } else {\n      this.toggleFields('.badge-header-text', 'discussionUiStatus');\n    }\n  };\n\n  toggleFields = (cssSelector: string, key: string): void => {\n    const elements = this.w.document.querySelectorAll(cssSelector) as NodeListOf<HTMLElement>;\n\n    elements.forEach((message) => {\n      const shouldBeDisplayed = message.dataset.i18nId === key;\n      // eslint-disable-next-line no-param-reassign\n      message.style.display = shouldBeDisplayed ? 'block' : 'none';\n    });\n  };\n}\n\nexport default LeanCoffeeDiscussionUI;\n","import LeanCoffeeDiscussionUI from './LeanCoffeeDiscussionUI';\n\nconst config: Config = process.env.CONFIG as unknown as Config;\n\nconst discussionUI = new LeanCoffeeDiscussionUI({ w: window, config });\ndiscussionUI.init();\n"],"names":["addZero","value","digits","str","toString","size","length","Array","join","concat","module","exports","ms","options","leading","showMs","unsignedMs","sign","duration","getSign","t","TypeError","days","Math","trunc","hours","minutes","seconds","parseMs","output","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","constructor","scope","visibility","assign","this","read","cardId","write","set","writeMultiple","entries","remove","deleteMultiple","BoardStorage","super","getDiscussionStatus","DISCUSSION_STATUS","getDiscussionCardId","DISCUSSION_CARD_ID","getDiscussionStartedAt","DISCUSSION_STARTED_AT","getDiscussionPreviousElapsed","DISCUSSION_PREVIOUS_ELAPSED","getDiscussionIntervalId","DISCUSSION_INTERVAL_ID","getPowerUpVersion","POWER_UP_VERSION","setPowerUpVersion","version","CardStorage","getDiscussionElapsed","DISCUSSION_ELAPSED","getDiscussionThumbs","DISCUSSION_THUMBS","getDiscussionButtonLabel","DISCUSSION_BUTTON_LABEL","saveDiscussionStatus","newStatus","saveDiscussionElapsed","newElapsed","saveDiscussionThumbs","newThumbs","saveVotes","newVotes","VOTES","deleteVotes","delete","saveDiscussionButtonLabel","newLabel","deleteDiscussionThumbs","LeanCoffeeBase","w","config","isRunningInProduction","boardStorage","cardStorage","supportedLocales","I18nConfig","defaultLocale","resourceUrl","ThumbDirection","monitorDiscussion","async","discussionStatus","isOngoingOrPausedForThisCard","includes","previousStatus","toggleBadges","toggleFields","toggleVoting","updateStatusHeader","updateElapsed","updateThumbs","status","startedAt","previousElapsed","elapsed","Date","now","formattedTotalElapsed","badgeElapsed","classList","add","toLowerCase","textContent","localizeKey","savedThumbs","currentMember","getContext","member","currentMemberThumb","keys","forEach","thumbType","countByThumbType","filter","memberId","thumbsBadge","document","querySelector","innerText","handleThumbs","thumb","thumbs","visible","badges","style","display","voting","element","cssSelector","querySelectorAll","message","shouldBeDisplayed","dataset","i18nId","TrelloPowerUp","iframe","localization","helpfulStacks","badgeHeaderStatus","badgeHeaderWhatNext","messageNone","messageEnded","init","addEventListener","render","localizeNode","body","setTimeout","sizeTo","clearInterval","intervalId","setInterval","window"],"sourceRoot":""}
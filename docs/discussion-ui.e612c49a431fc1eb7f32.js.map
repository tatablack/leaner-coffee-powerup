{"version":3,"file":"discussion-ui.e612c49a431fc1eb7f32.js","mappings":"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","sources":["webpack://leancoffee-powerup/../node_modules/.pnpm/format-duration@3.0.2/node_modules/format-duration/format-duration.js","webpack://leancoffee-powerup/webpack/bootstrap","webpack://leancoffee-powerup/webpack/runtime/compat get default export","webpack://leancoffee-powerup/webpack/runtime/define property getters","webpack://leancoffee-powerup/webpack/runtime/hasOwnProperty shorthand","webpack://leancoffee-powerup/./src/utils/Errors.ts","webpack://leancoffee-powerup/./src/utils/Scope.ts","webpack://leancoffee-powerup/./src/storage/Storage.ts","webpack://leancoffee-powerup/./src/storage/BoardStorage.ts","webpack://leancoffee-powerup/./src/storage/CardStorage.ts","webpack://leancoffee-powerup/./src/storage/MemberStorage.ts","webpack://leancoffee-powerup/./src/LeanCoffeeBase.ts","webpack://leancoffee-powerup/./src/utils/I18nConfig.ts","webpack://leancoffee-powerup/./src/LeanCoffeeIFrame.ts","webpack://leancoffee-powerup/./src/utils/Analytics.ts","webpack://leancoffee-powerup/./src/LeanCoffeeDiscussionUI.ts","webpack://leancoffee-powerup/./src/discussion-ui.ts"],"sourcesContent":["// adapted from https://github.com/sindresorhus/parse-ms.\n// moved to internal function because parse-ms is now pure ESM.\nfunction parseMs (ms) {\n  if (typeof ms !== 'number') {\n    throw new TypeError('Expected a number')\n  }\n\n  return {\n    days: Math.trunc(ms / 86400000),\n    hours: Math.trunc(ms / 3600000) % 24,\n    minutes: Math.trunc(ms / 60000) % 60,\n    seconds: Math.trunc(ms / 1000) % 60,\n    ms: Math.trunc(ms) % 1000\n  }\n}\n\n// adapted from https://github.com/rafaelrinaldi/add-zero.\n// moved to internal function b/c addZero is unmaintained (7+ years).\n// stripped out negative sign logic since we're already doing it elsewhere.\nfunction addZero (value, digits) {\n  digits = digits || 2\n\n  let str = value.toString()\n  let size = 0\n\n  size = digits - str.length + 1\n  str = new Array(size).join('0').concat(str)\n\n  return str\n}\n\nfunction getSign (duration, showMs) {\n  if (showMs) return duration < 0 ? '-' : ''\n  return duration <= -1000 ? '-' : ''\n}\n\n/**\n * Convert a number in milliseconds to a standard duration string.\n * @param {number} ms - duration in milliseconds\n * @param {object} options - formatDuration options object\n * @param {boolean} [options.leading=false] - add leading zero\n * @param {boolean} [options.milliseconds=false] - add milliseconds\n * @returns string - formatted duration string\n */\nfunction formatDuration (ms, options) {\n  const leading = options && options.leading\n  const showMs = options && options.ms\n  const unsignedMs = ms < 0 ? -ms : ms\n  const sign = getSign(ms, showMs)\n  const t = parseMs(unsignedMs)\n  const seconds = addZero(t.seconds)\n  let output = ''\n\n  if (t.days && !output) output = sign + t.days + ':' + addZero(t.hours) + ':' + addZero(t.minutes) + ':' + seconds\n  if (t.hours && !output) output = sign + (leading ? addZero(t.hours) : t.hours) + ':' + addZero(t.minutes) + ':' + seconds\n  if (!output) output = sign + (leading ? addZero(t.minutes) : t.minutes) + ':' + seconds\n\n  if (showMs) output += '.' + addZero(t.ms, 3)\n  return output\n}\n\nmodule.exports = formatDuration\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","import BoardStorage from \"../storage/BoardStorage\";\nimport { Trello } from \"../types/TrelloPowerUp\";\n\nconst getTagsForReporting = async (\n  boardStorage: BoardStorage,\n  t: Trello.PowerUp.HostHandlers,\n): Promise<string> => {\n  const organisationIdHash = await boardStorage.read<string>(\n    t,\n    BoardStorage.ORGANISATION_HASH,\n  );\n  const boardIdHash = await boardStorage.read<string>(\n    t,\n    BoardStorage.BOARD_HASH,\n  );\n  return `organisationIdHash=${organisationIdHash}&boardIdHash=${boardIdHash}`;\n};\n\nconst isRunningInProduction = (): boolean =>\n  (process.env.NODE_ENV as Environment) === \"production\";\n\nconst ErrorReporter = (\n  target: any,\n  methodName: string,\n  descriptor: PropertyDescriptor,\n) => {\n  const originalMethod = descriptor.value;\n  const isAsync = originalMethod.constructor.name === \"AsyncFunction\";\n  const warningMessage = `Leaner Coffee Power-Up: error in ${methodName} (reported)`;\n\n  if (isAsync) {\n    descriptor.value = async function (...args: any[]) {\n      try {\n        return await originalMethod.apply(this, args);\n      } catch (error) {\n        console.warn(warningMessage);\n        window.Sentry.captureException(error);\n      }\n    };\n  } else {\n    descriptor.value = function (...args: any[]) {\n      try {\n        return originalMethod.apply(this, args);\n      } catch (error) {\n        console.warn(warningMessage);\n        window.Sentry.captureException(error);\n      }\n    };\n  }\n\n  return descriptor;\n};\n\nfunction ErrorReporterInjector<T extends { new (...args: any[]): object }>(\n  constructor: T,\n) {\n  // Get all prototype methods\n  const prototype = constructor.prototype;\n  const methodNames = Object.getOwnPropertyNames(prototype).filter(\n    (name) => typeof prototype[name] === \"function\" && name !== \"constructor\", // Skip constructor\n  );\n\n  // Apply the ErrorReporter decorator to each method\n  methodNames.forEach((methodName) => {\n    const descriptor = Object.getOwnPropertyDescriptor(prototype, methodName);\n    if (descriptor && typeof descriptor.value === \"function\") {\n      const decoratedDescriptor = ErrorReporter(\n        prototype,\n        methodName,\n        descriptor,\n      );\n\n      // console.log(\n      //   `Decorating ${constructor.name}::${methodName} with ErrorReporter`,\n      // );\n      Object.defineProperty(prototype, methodName, decoratedDescriptor);\n    }\n  });\n\n  return constructor;\n}\n\nexport {\n  getTagsForReporting,\n  isRunningInProduction,\n  ErrorReporter,\n  ErrorReporterInjector,\n};\n","const bindAll = (classInstance: any) => {\n  const p = classInstance.constructor.prototype;\n  const methodNames = Object.getOwnPropertyNames(p).filter(\n    (name) => typeof p[name] === \"function\" && name !== \"constructor\", // Skip constructor\n  );\n\n  methodNames.forEach(\n    (methodName) => (p[methodName] = p[methodName].bind(classInstance)),\n  );\n};\n\nexport { bindAll };\n","import { Trello } from \"../types/TrelloPowerUp\";\nimport { ErrorReporterInjector } from \"../utils/Errors\";\nimport { bindAll } from \"../utils/Scope\";\n\n@ErrorReporterInjector\nclass Storage {\n  scope: Trello.PowerUp.Scope;\n  visibility: Trello.PowerUp.Visibility;\n\n  constructor(\n    scope: Trello.PowerUp.Scope = \"member\",\n    visibility: Trello.PowerUp.Visibility = \"private\",\n  ) {\n    Object.assign(this, { scope, visibility });\n    bindAll(this);\n  }\n\n  canWrite(t: Trello.PowerUp.HostHandlers): boolean {\n    return this.scope === \"member\" || t.memberCanWriteToModel(this.scope);\n  }\n\n  async isObserver(t: Trello.PowerUp.AnonymousHostHandlers) {\n    const board = await t.board(\"memberships\");\n    const currentMember = await t.member(\"id\");\n    const myMembership = board.memberships.find(\n      (m) => m.idMember === currentMember.id,\n    );\n    return myMembership && myMembership.memberType === \"observer\";\n  }\n\n  read<T>(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    key: string,\n    cardId?: string,\n  ): PromiseLike<T> {\n    return t.get(cardId ?? this.scope, this.visibility, key);\n  }\n\n  async write(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    key: string,\n    value: any,\n    cardId?: string,\n  ): Promise<void> {\n    if (!(\"memberCanWriteToModel\" in t) || this.canWrite(t)) {\n      await t.set(cardId ?? this.scope, this.visibility, key, value);\n    } else {\n      window.Sentry.captureException(new Error(\"Error while editing scope\"), {\n        contexts: {\n          WriteOperation: {\n            scope: this.scope,\n            visibility: this.visibility,\n            key: key,\n            hasCardId: !!cardId,\n            isObserver: await this.isObserver(t),\n          },\n        },\n      });\n    }\n  }\n\n  async writeMultiple(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    entries: {\n      [key: string]: any;\n    },\n    cardId?: string,\n  ): Promise<void> {\n    if (!(\"memberCanWriteToModel\" in t) || this.canWrite(t)) {\n      await t.set(cardId ?? this.scope, this.visibility, entries);\n    } else {\n      window.Sentry.captureException(new Error(\"Error while editing scope\"), {\n        contexts: {\n          WriteOperation: {\n            scope: this.scope,\n            visibility: this.visibility,\n            key: entries,\n            hasCardId: !!cardId,\n            isObserver: await this.isObserver(t),\n          },\n        },\n      });\n    }\n  }\n\n  async delete(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    key: string,\n    cardId?: string,\n  ): Promise<void> {\n    if (!(\"memberCanWriteToModel\" in t) || this.canWrite(t)) {\n      return t.remove(cardId ?? this.scope, this.visibility, key);\n    } else {\n      window.Sentry.captureException(new Error(\"Error while editing scope\"), {\n        contexts: {\n          DeleteOperation: {\n            scope: this.scope,\n            visibility: this.visibility,\n            key: key,\n            hasCardId: !!cardId,\n            isObserver: await this.isObserver(t),\n          },\n        },\n      });\n    }\n  }\n\n  async deleteMultiple(\n    t: Trello.PowerUp.HostHandlers | Trello.PowerUp.AnonymousHostHandlers,\n    entries: string[],\n    cardId?: string,\n  ): Promise<void> {\n    if (!(\"memberCanWriteToModel\" in t) || this.canWrite(t)) {\n      return t.remove(cardId ?? this.scope, this.visibility, entries);\n    } else {\n      window.Sentry.captureException(new Error(\"Error while editing scope\"), {\n        contexts: {\n          DeleteOperation: {\n            scope: this.scope,\n            visibility: this.visibility,\n            key: entries,\n            hasCardId: !!cardId,\n            isObserver: await this.isObserver(t),\n          },\n        },\n      });\n    }\n  }\n}\n\nexport default Storage;\n","import Storage from \"./Storage\";\n\nclass BoardStorage extends Storage {\n  static DISCUSSION_STATUS = \"leancoffeeDiscussionStatus\";\n  static DISCUSSION_CARD_ID = \"leancoffeeDiscussionCardId\";\n  static DISCUSSION_STARTED_AT = \"leancoffeeDiscussionStartedAt\";\n  static DISCUSSION_PREVIOUS_ELAPSED = \"leancoffeeDiscussionPreviousElapsed\";\n  static DISCUSSION_INTERVAL_ID = \"leancoffeeDiscussionIntervalId\";\n  static POWER_UP_INSTALLATION_DATE = \"powerUpInstallationDate\";\n  static ORGANISATION_HASH = \"organisationHash\";\n  static BOARD_HASH = \"boardHash\";\n\n  constructor() {\n    super(\"board\", \"shared\");\n  }\n}\n\nexport default BoardStorage;\n","import Storage from \"./Storage\";\n\nclass CardStorage extends Storage {\n  static DISCUSSION_STATUS = \"leancoffeeDiscussionStatus\";\n  static DISCUSSION_ELAPSED = \"leancoffeeDiscussionElapsed\";\n  static DISCUSSION_THUMBS = \"leancoffeeDiscussionThumbs\";\n  static VOTES = \"leancoffeeVotes\";\n  static DISCUSSION_BUTTON_LABEL = \"discussionButtonLabel\";\n\n  constructor() {\n    super(\"card\", \"shared\");\n  }\n}\n\nexport default CardStorage;\n","import Storage from \"./Storage\";\n\nclass MemberStorage extends Storage {\n  static POWER_UP_VERSION = \"powerUpVersion\";\n\n  constructor() {\n    super(\"member\", \"private\");\n  }\n}\n\nexport default MemberStorage;\n","import BoardStorage from \"./storage/BoardStorage\";\nimport CardStorage from \"./storage/CardStorage\";\nimport MemberStorage from \"./storage/MemberStorage\";\nimport { Trello } from \"./types/TrelloPowerUp\";\nimport { ErrorReporterInjector } from \"./utils/Errors\";\nimport { bindAll } from \"./utils/Scope\";\n\nexport interface LeanCoffeeBaseParams {\n  w: Window;\n  config: Config;\n  t?: Trello.PowerUp | Trello.PowerUp.IFrame;\n}\n\n@ErrorReporterInjector\nexport class LeanCoffeeBase {\n  w: Window;\n  boardStorage: BoardStorage;\n  cardStorage: CardStorage;\n  memberStorage: MemberStorage;\n  config: Config;\n\n  constructor({ w, config }: LeanCoffeeBaseParams) {\n    this.w = w;\n    this.config = config;\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n    this.memberStorage = new MemberStorage();\n    bindAll(this);\n  }\n}\n","import { Trello } from \"../types/TrelloPowerUp\";\n\nconst config: Config = process.env.CONFIG as unknown as Config;\nconst { supportedLocales } = config[process.env.NODE_ENV as Environment];\n\nexport const I18nConfig: Trello.PowerUp.Localization = {\n  defaultLocale: \"en\",\n  supportedLocales,\n  resourceUrl: \"/i18n/{locale}.json\",\n};\n","import { LeanCoffeeBase, LeanCoffeeBaseParams } from \"./LeanCoffeeBase\";\nimport BoardStorage from \"./storage/BoardStorage\";\nimport { Trello } from \"./types/TrelloPowerUp\";\nimport { isRunningInProduction } from \"./utils/Errors\";\nimport { I18nConfig } from \"./utils/I18nConfig\";\n\nexport class LeanCoffeeIFrame extends LeanCoffeeBase {\n  t: Trello.PowerUp.IFrame;\n\n  constructor({ w, config }: LeanCoffeeBaseParams) {\n    super({ w, config });\n\n    this.t = w.TrelloPowerUp.iframe({\n      localization: I18nConfig,\n      helpfulStacks: !isRunningInProduction(),\n    });\n\n    Promise.all([\n      this.boardStorage.read<string>(this.t, BoardStorage.ORGANISATION_HASH),\n      this.boardStorage.read<string>(this.t, BoardStorage.BOARD_HASH),\n    ]).then(([organisationIdHash, boardIdHash]) => {\n      if (this.w.Sentry) {\n        this.w.Sentry.onLoad(async () => {\n          this.w.Sentry.setTags({\n            organisationIdHash: organisationIdHash,\n            boardIdHash: boardIdHash,\n          });\n        });\n      }\n    });\n  }\n}\n","import BoardStorage from \"../storage/BoardStorage\";\nimport { Trello } from \"../types/TrelloPowerUp\";\n\nimport CustomPayload = umami.CustomPayload;\n\nconst sanitiseUrl = (urlString: string): string => {\n  const url = new URL(urlString);\n  return (\n    url.protocol +\n    url.hostname +\n    (url.port ? `:${url.port}` : \"\") +\n    url.pathname\n  );\n};\n\nconst beforeSend = (event: string, payload: CustomPayload): CustomPayload => {\n  return {\n    ...payload,\n    ...{\n      referrer: window.LeanerCoffeeAnalyticsReferrer,\n      hostname: window.LeanerCoffeeAnalyticsHostname,\n    },\n    url: sanitiseUrl(payload.url),\n  };\n};\n\nconst pageview = async (window: Window, eventData: umami.EventData = {}) => {\n  if (window.umami) {\n    await window.umami.track((props: any) => {\n      return { ...props, ...eventData };\n    });\n  } else {\n    console.warn(\"Umami not available for pageview\", eventData);\n  }\n};\n\nconst event = async (\n  window: Window,\n  eventName: string,\n  eventData?: umami.EventData,\n) => {\n  if (window.umami) {\n    await window.umami.track(eventName, eventData);\n  } else {\n    console.warn(\"Umami not available for event \" + eventName, eventData);\n  }\n};\n\nconst getOverrides = async (\n  boardStorage: BoardStorage,\n  t: Trello.PowerUp.HostHandlers,\n): Promise<string> => {\n  const organisationIdHash = await boardStorage.read<string>(\n    t,\n    BoardStorage.ORGANISATION_HASH,\n  );\n  const boardIdHash = await boardStorage.read<string>(\n    t,\n    BoardStorage.BOARD_HASH,\n  );\n  const referrer = encodeURIComponent(\"https://\" + organisationIdHash);\n  return `referrer=${referrer}&hostname=${boardIdHash}`;\n};\n\nconst Analytics = {\n  beforeSend,\n  pageview,\n  event,\n  getOverrides,\n};\n\nexport default Analytics;\n","import formatDuration from \"format-duration\";\n\nimport { LeanCoffeeBaseParams } from \"./LeanCoffeeBase\";\nimport { LeanCoffeeIFrame } from \"./LeanCoffeeIFrame\";\nimport BoardStorage from \"./storage/BoardStorage\";\nimport CardStorage from \"./storage/CardStorage\";\nimport Analytics from \"./utils/Analytics\";\n\nenum ThumbDirection {\n  \"UP\" = \"UP\",\n  \"DOWN\" = \"DOWN\",\n  \"MIDDLE\" = \"MIDDLE\",\n}\n\nclass LeanCoffeeDiscussionUI extends LeanCoffeeIFrame {\n  badges: HTMLElement;\n  badgeElapsed: HTMLElement;\n  badgeHeaderStatus: HTMLElement;\n  badgeHeaderWhatNext: HTMLElement;\n  messageNone: HTMLElement;\n  messageEnded: HTMLElement;\n  voting: NodeListOf<HTMLElement>;\n  intervalId: number;\n  previousStatus: DiscussionStatus;\n\n  constructor({ w, config }: LeanCoffeeBaseParams) {\n    super({ w, config });\n\n    this.badges = this.w.document.querySelector(\".badges\");\n    this.badgeElapsed = this.w.document.querySelector(\".badge-elapsed\");\n    this.badgeHeaderStatus = this.w.document.querySelector(\n      '[data-i18n-id=\"discussionUiStatus\"]',\n    );\n    this.badgeHeaderWhatNext = this.w.document.querySelector(\n      '[data-i18n-id=\"discussionUiWhatNext\"]',\n    );\n    this.messageNone = this.w.document.querySelector(\n      '[data-i18n-id=\"discussionUiMessageNone\"]',\n    );\n    this.messageEnded = this.w.document.querySelector(\n      '[data-i18n-id=\"discussionUiMessageEnded\"]',\n    );\n    this.voting = this.w.document.querySelectorAll(\".voting\");\n  }\n\n  init(): void {\n    this.w.document\n      .querySelector(\".voting-up\")\n      .addEventListener(\"click\", () => this.handleThumbs(\"UP\"));\n    this.w.document\n      .querySelector(\".voting-middle\")\n      .addEventListener(\"click\", () => this.handleThumbs(\"MIDDLE\"));\n    this.w.document\n      .querySelector(\".voting-down\")\n      .addEventListener(\"click\", () => this.handleThumbs(\"DOWN\"));\n\n    this.t.render(() => {\n      this.t.localizeNode(document.body);\n      this.w.setTimeout(() => this.t.sizeTo.call(this.t, \"body\"), 100);\n      this.monitorDiscussion();\n      this.w.clearInterval(this.intervalId);\n      this.intervalId = this.w.setInterval(this.monitorDiscussion, 1000);\n    });\n  }\n\n  async monitorDiscussion(): Promise<void> {\n    const discussionStatus = await this.cardStorage.read<DiscussionStatus>(\n      this.t,\n      CardStorage.DISCUSSION_STATUS,\n    );\n    const isOngoingOrPausedForThisCard = [\"ONGOING\", \"PAUSED\"].includes(\n      discussionStatus,\n    );\n\n    if (\n      !!discussionStatus &&\n      this.previousStatus === discussionStatus &&\n      !isOngoingOrPausedForThisCard\n    ) {\n      return;\n    }\n\n    switch (discussionStatus) {\n      case \"ENDED\": {\n        // when the discussion ends, hide badge and display a message\n        this.toggleBadges(false);\n        this.toggleFields(\".message\", \"discussionUiMessageEnded\");\n        break;\n      }\n      case \"ONGOING\": {\n        // when discussion is ongoing, update badge (display ongoing and 1-sec res timer)\n        if (this.previousStatus !== discussionStatus) {\n          this.toggleVoting(false);\n          this.toggleBadges(true);\n          this.toggleFields(\".message\", \"\");\n\n          this.updateStatusHeader(\"ONGOING\");\n        }\n\n        this.updateElapsed(\"ONGOING\");\n        break;\n      }\n      case \"PAUSED\": {\n        // when discussion is paused, update the badge (display elapsed and three buttons to deal with discussion)\n        if (this.previousStatus !== discussionStatus) {\n          this.toggleFields(\".message\", \"\");\n          this.toggleVoting(true);\n          this.toggleBadges(true);\n          this.updateStatusHeader(\"PAUSED\");\n          this.updateElapsed(\"PAUSED\");\n        }\n\n        this.updateThumbs();\n        break;\n      }\n      default:\n        this.toggleBadges(false);\n        this.toggleVoting(false);\n        this.toggleFields(\".message\", \"discussionUiMessageNone\");\n        break;\n    }\n\n    this.previousStatus = discussionStatus;\n  }\n\n  async updateElapsed(status: DiscussionStatus): Promise<void> {\n    if (status === \"ONGOING\") {\n      const startedAt = await this.boardStorage.read<number>(\n        this.t,\n        BoardStorage.DISCUSSION_STARTED_AT,\n      );\n      const previousElapsed =\n        (await this.boardStorage.read<number>(\n          this.t,\n          BoardStorage.DISCUSSION_PREVIOUS_ELAPSED,\n        )) || 0;\n      const elapsed = startedAt ? Date.now() - startedAt : 0;\n      const formattedTotalElapsed = formatDuration(elapsed + previousElapsed);\n\n      this.badgeElapsed.classList.add(status.toLowerCase());\n      this.badgeElapsed.classList.remove(\"paused\");\n      this.badgeElapsed.textContent = `${this.t.localizeKey(\"discussionOngoing\")} → ${formattedTotalElapsed}`;\n    } else {\n      const elapsed = await this.cardStorage.read<number>(\n        this.t,\n        CardStorage.DISCUSSION_ELAPSED,\n      );\n\n      this.badgeElapsed.classList.add(status.toLowerCase());\n      this.badgeElapsed.classList.remove(\"ongoing\");\n      this.badgeElapsed.textContent = `${this.t.localizeKey(\"discussionElapsed\")} → ${formatDuration(elapsed)}`;\n    }\n  }\n\n  async updateThumbs(): Promise<void> {\n    const savedThumbs =\n      (await this.cardStorage.read<Thumbs>(\n        this.t,\n        CardStorage.DISCUSSION_THUMBS,\n      )) || {};\n    const currentMember = this.t.getContext().member;\n    const currentMemberThumb = savedThumbs[currentMember];\n\n    Object.keys(ThumbDirection).forEach((thumbType) => {\n      const countByThumbType = Object.keys(savedThumbs).filter(\n        (memberId) => savedThumbs[memberId] === thumbType,\n      ).length;\n\n      const thumbsBadge = this.w.document.querySelector(\n        `.voting-${thumbType.toLowerCase()}`,\n      ) as HTMLElement;\n      thumbsBadge.innerText = countByThumbType.toString();\n\n      if (thumbType === currentMemberThumb) {\n        thumbsBadge.classList.add(\"own\");\n      } else {\n        thumbsBadge.classList.remove(\"own\");\n      }\n    });\n  }\n\n  async handleThumbs(thumb: Thumb): Promise<void> {\n    const thumbs =\n      (await this.cardStorage.read<Thumbs>(\n        this.t,\n        CardStorage.DISCUSSION_THUMBS,\n      )) || {};\n    const currentMember = this.t.getContext().member;\n\n    if (thumbs[currentMember] === thumb) {\n      delete thumbs[currentMember];\n      await Analytics.event(this.w, \"keepDiscussingVoted\", {\n        outcome: \"removed\",\n        choice: thumb,\n      });\n    } else {\n      thumbs[currentMember] = thumb;\n      await Analytics.event(this.w, \"keepDiscussingVoted\", {\n        outcome: \"added\",\n        choice: thumb,\n      });\n    }\n\n    return this.cardStorage.write(\n      this.t,\n      CardStorage.DISCUSSION_THUMBS,\n      thumbs,\n    );\n  }\n\n  toggleBadges(visible: boolean): void {\n    this.badges.style.display = visible ? \"grid\" : \"none\";\n  }\n\n  toggleVoting = (visible: boolean): void => {\n    this.voting.forEach((element) => {\n      element.style.visibility = visible ? \"visible\" : \"hidden\";\n    });\n  };\n\n  updateStatusHeader(status: DiscussionStatus): void {\n    if (status === \"PAUSED\") {\n      this.toggleFields(\".badge-header-text\", \"discussionUiWhatNext\");\n    } else {\n      this.toggleFields(\".badge-header-text\", \"discussionUiStatus\");\n    }\n  }\n\n  toggleFields(cssSelector: string, key: string): void {\n    const elements = this.w.document.querySelectorAll(\n      cssSelector,\n    ) as NodeListOf<HTMLElement>;\n\n    elements.forEach((message) => {\n      const shouldBeDisplayed = message.dataset.i18nId === key;\n\n      message.style.display = shouldBeDisplayed ? \"block\" : \"none\";\n    });\n  }\n}\n\nexport default LeanCoffeeDiscussionUI;\n","import LeanCoffeeDiscussionUI from \"./LeanCoffeeDiscussionUI\";\n\nconst config: Config = process.env.CONFIG as unknown as Config;\n\nconst discussionUI = new LeanCoffeeDiscussionUI({ w: window, config });\ndiscussionUI.init();\n"],"names":["addZero","value","digits","str","toString","size","length","Array","join","concat","module","exports","ms","options","leading","showMs","unsignedMs","sign","duration","getSign","t","TypeError","days","Math","trunc","hours","minutes","seconds","parseMs","output","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","ErrorReporter","target","methodName","descriptor","originalMethod","isAsync","constructor","name","warningMessage","async","args","apply","this","error","console","warn","window","Sentry","captureException","ErrorReporterInjector","getOwnPropertyNames","filter","forEach","getOwnPropertyDescriptor","decoratedDescriptor","bindAll","classInstance","p","bind","Storage","scope","visibility","assign","canWrite","memberCanWriteToModel","isObserver","board","currentMember","member","myMembership","memberships","find","m","idMember","id","memberType","read","cardId","write","set","Error","contexts","WriteOperation","hasCardId","writeMultiple","entries","remove","DeleteOperation","deleteMultiple","super","DISCUSSION_STATUS","DISCUSSION_CARD_ID","DISCUSSION_STARTED_AT","DISCUSSION_PREVIOUS_ELAPSED","DISCUSSION_INTERVAL_ID","POWER_UP_INSTALLATION_DATE","ORGANISATION_HASH","BOARD_HASH","CardStorage","DISCUSSION_ELAPSED","DISCUSSION_THUMBS","VOTES","DISCUSSION_BUTTON_LABEL","MemberStorage","POWER_UP_VERSION","LeanCoffeeBase","w","config","boardStorage","cardStorage","memberStorage","supportedLocales","I18nConfig","defaultLocale","resourceUrl","LeanCoffeeIFrame","TrelloPowerUp","iframe","localization","helpfulStacks","Promise","all","then","organisationIdHash","boardIdHash","onLoad","setTags","sanitiseUrl","urlString","url","URL","protocol","hostname","port","pathname","ThumbDirection","beforeSend","event","payload","referrer","LeanerCoffeeAnalyticsReferrer","LeanerCoffeeAnalyticsHostname","pageview","eventData","umami","track","props","eventName","getOverrides","encodeURIComponent","toggleVoting","visible","voting","element","style","badges","document","querySelector","badgeElapsed","badgeHeaderStatus","badgeHeaderWhatNext","messageNone","messageEnded","querySelectorAll","init","addEventListener","handleThumbs","render","localizeNode","body","setTimeout","sizeTo","monitorDiscussion","clearInterval","intervalId","setInterval","discussionStatus","isOngoingOrPausedForThisCard","includes","previousStatus","toggleBadges","toggleFields","updateStatusHeader","updateElapsed","updateThumbs","status","startedAt","previousElapsed","elapsed","Date","now","formattedTotalElapsed","classList","add","toLowerCase","textContent","localizeKey","savedThumbs","getContext","currentMemberThumb","keys","thumbType","countByThumbType","memberId","thumbsBadge","innerText","thumb","thumbs","outcome","choice","display","cssSelector","message","shouldBeDisplayed","dataset","i18nId"],"sourceRoot":""}